<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Id: RegExpRemarks.xml 16122 2012-01-06 09:39:15Z kb $ -->
<note xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    
         xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1 
     http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd "
    language="de">
    <p>
        Einige Bemerkungen über reguläre Ausdrücke wie sie im JobScheduler verwendet werden.
    </p>
    <p>
        Ein regulärer Ausdruck ist keine
        <a href="http://en.wikipedia.org/wiki/Wildcard_character#Files_and_directories">
            wildcard
        </a>
        .
        Um einen Eindruck hinsichtlich der Unterschiede zwischen einer Wildcard und einem regulären Ausdruck zu bekommen,
        betrachten wir die Wildcard "*.txt", welche
        alle Dateien mit dem Dateinamen-Erweiterung ".txt" auswählt.
        Ein regulärer Ausdruck funktioniert auf die gleiche Art und Weise, hier muss die "Wildcard" jedoch die Form "^.*\.txt$" haben.
        Das sieht ein wenig seltsam aus, aber ist viel flexibler und leistungsfähiger zur Filterung der Dateinamen
        als das Konzept der Wildcards, wenn man komplexere Namen oder Muster filtern möchte.
    </p>
    <p>
    Ein weiterer Vorteil regulärer Ausdrücke gegenüber einer "wildcard" ist die Mächtigkeit und gleichzeitige Flexibilität bei der
    Formulierung von Bedingungen, die zutreffen müssen, damit ein Dateiname (e.g. ein String) ausgewählt wird.
    Sollen zum Beispiel alle Datein ausgewählt werden, deren Name entweder die Zeichenkette "SUCH" oder "SUEU" oder "LIS1" enhält und nicht am Anfang oder Ende steht, so 
    ist der reguläre Ausdruck wie folgt zu formulieren: ^.*(SUCH|SUEU|LIS1).*$
    </p>
    <p>
        Die allgemeine Syntax eines
        <a href="http://en.wikipedia.org/wiki/Regular_expression">regulären Ausdrucks</a>
        , auch regex or regexp genannt,
        wird
        <a href="http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap09.html">hier</a>
        beschrieben.
        Es unterscheidet sich von anderen RegExp Definitionen, z. B. wie für Perl.
    </p>
    <p>
        Für weitere Informationen regulärer Ausdrücke siehe
        <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html">java.util.regex.Pattern</a>
    </p>

</note>
