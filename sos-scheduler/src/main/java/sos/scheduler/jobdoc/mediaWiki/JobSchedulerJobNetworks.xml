<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.6/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.6/ http://www.mediawiki.org/xml/export-0.6.xsd" version="0.6" xml:lang="en">
  <siteinfo>
    <sitename>JobScheduler</sitename>
    <base>http://www.sos-berlin.com/mediawiki/index.php/Main_Page</base>
    <generator>MediaWiki 1.19.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">JobScheduler</namespace>
      <namespace key="5" case="first-letter">JobScheduler talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Jobnetze im JobScheduler</title>
    <ns>0</ns>
    <id>185</id>
      <sha1>pnq4xl12w5rmobx9f1av343fg0nxkmq</sha1>
    <revision>
      <id>2343</id>
      <timestamp>2013-03-26T12:01:09Z</timestamp>
      <contributor>
        <username>Sosss</username>
        <id>15</id>
      </contributor>
      <text xml:space="preserve" bytes="7059">[[Category:Job configuration]][[Category:Job network]][[category:Jobnet]]
== Aufbau eines Jobnetzes ==
Jobnetze werden durch entsprechend parameterisierte Order im live Folder des JobScheduler definiert. Das Jobnetz wird durch die Angabe der Parameter '''successor''' und '''predecessor''' aufgebaut. Die erste Order in einem Jobnetz ist die sog. Bootstrap Order (Knoten A).

[[File:simple_jobnet.png]]

''Zur übersichtlicheren Darstellung sind hier nur die Parameter '''successor''' und '''predecessor''' genannt, daneben existieren weitere Parameter, wie z.B. '''script_to_execute''' und ''on_demand'', die im Folgenden erläutert werden.''

Ein Jobnetz arbeitet mit einer generischen Jobkette, die einen generischen Job ausführt. Aus diesem Grund erhält jede Order eines Jobnetzes den Parameter '''script_to_execute''', der dem generischen Job übergeben wird und ihm mitteilt, welches shell Kommando ausgeführt werden soll. ''Derzeit sind Jobnetze ausschließlich für die Ausführung von shell Jobs vorgesehen.''

=== Möglichkeiten zur Laufzeitdefintion ===
Die konkrete Startzeit eines Jobnetzes wird durch die Bootstrap Order bestimmt. Es gibt drei Möglichkeiten die Startzeit eines Jobnetzes zu bestimmen:

==== Definition konkreter Startzeiten ====
Wie sonst üblich können beliebige Startzeiten für die Bootstrap Order definiert werden, die allerdings der Einschränkung unterliegen, dass es sich hierbei um '''single_start''' handeln muö (repeat Intervalle werden nicht direkt untersützt, können aber durch entsprechende Laufzeitdefintion für die Erzeugung des Jobnetzplanes und anschliessendem, sofortigem Start des Jobnetzes realisiert werden).

==== Start des Jobnetzes auf Abruf ====
Mit dem Order Parameter '''on_demand='true'''' wird die Bootstrap Order des Jobnetzes zwar erzeugt, kann jedoch nur auf Abruf gestartet werden. Der Parameter '''on_demand''' überschreibt evtl. vorhandene Laufzeitdefinitionen.

==== Sofortiger Start des Jobnetzes nach der Erzeugung des Jobnetzplanes ====
Enthält die Bootstrap Order weder den Parameter '''on_demand''' noch eine Laufzeitdefinition, wird das Jobnetz sofort nach der Erzeugung des Jobnetzplanes gestartet.

== Erzeugung eines Jobnetzes == 
Bevor ein Jobnetz zur Ausführung kommen kann, muö es in eine Datenbank überführt werden. Dazu gibt es eine entsprechende Jobkette, der über eine geeignete Order der Startknoten des Jobnetzes mitgeteilt wird. Von diesem ausgehend wird das Jobnetz über den '''sucessor''' Parameter in einer Datenbank abgebildet.

Die Jobkette '''jobnet_plan_creator''' überführt die Defintion einer Jobkette aus der JobScheduler Konfiguration in eine Abbildung in der Datenbank und erzeugt die Start Order zur Ausführung des Jobnetzes.

Eine Order zum Start dieser Jobkette enthält als Parameter die Werte '''JobChainName''' und '''OrderId''', also z.B.
 &lt;order title=&quot;schedule a jobnet&quot;&gt;
    &lt;params&gt;
        &lt;param name=&quot;JobChainName&quot; value=&quot;simple_jobnet&quot; /&gt;
        &lt;param name=&quot;OrderId&quot; value=&quot;A&quot; /&gt;
    &lt;/params&gt;
    &lt;run_time /&gt;
 &lt;/order&gt;
Damit wird der Startknoten des Jobnetzes, die sog. bootstrap order, benannt.

''Im späteren, produktivem Betrieb werden solche Order i.d.R. in der Nacht laufen, um den Tagesplan für die auszuführenden Jobnetze zu erstellen.''

* '''OrderId''' bezeichnet die Bootstrap Order des Jobnetzes.
* '''JobChainName''' bezeichnet die generische Jobkette, die durch die Order ausgeführt werden soll.
 
Der Job '''JobNetPlanCreator''' führt (gesteuert durch Parameter) die folgenden Schritte aus:

=== Überführung des Jobnetzes in die Datenbank ('''JobNetCreator''') ===
Der JobNetCreator überführt die Definition eines Jobnetzes in der JobScheduler Konfiguration in eine Repräsentation in der Datenbank. Dabei werden die Knoten des Jobnetzes (d.h. die Order der JobScheduler Konfiguration) in die Tabelle ''SCHEDULER_JOB_NET_NODES'' überführt, die Kanten (d.h. die Verbindungen zwischen den Knoten) in die Tabelle ''SCHEDULER_JOB_NET_EDGES''.

Zu einem Knoten werden KEINE Informationen bzgl. der Konfiguration des Knotens hinterlegt, sondern lediglich Informationen zu seiner eindeutigen Identifizierung (Ordername, Jobkette, SchedulerId).

Dieser Schritt wird '''immer''' ausgeführt und kann nicht mit Parametern gesteuert werden.

=== Erzeugung eines Jobnetzplanes ('''JobNetPlanCreator''') ===
Der JobNetPlanCreator erzeugt aus einem Jobnetz, wie es in den Tabellen ''SCHEDULER_JOB_NET_NODES'' und ''SCHEDULER_JOB_NET_EDGES'' definiert ist und Informationen aus der JobScheduler Konfiguration, einen Jobnetz Plan, d.h. eine ausführbare Instanz eines Jobnetzes. Diese wird in der Tabelle ''SCHEDULER_JOB_NET_PLAN'' abgelegt.
Voraussetzung für die Erzeugung eines Jobnetz Planes ist die Existenz des Jobnetzes in der Datenank, aus diesem Grund impliziert die Ausführung des ''JobNetPlanCreators'' auch die Ausführung des ''JobNetCreators''.

Ein Jobnetzplan ist durch eine vom ''JobNetPlanCreator'' zugewiesene UUID eindeutig.

Dieser Schritt wird '''immer''' ausgeführt und kann nicht mit Parametern gesteuert werden.

=== Überprüfung der Jobnetzknoten auf ihr Laufzeitverhalten ('''FrequencyChecker''') ===
Der FrequencyChecker überprüft jeden einzelnen Knoten eines Jobnetzes auf seine Laufzeitdefinition, d.h. für eine konkret geplante Instanz eines Knotens im Jobnetzplan wird eintschieden, ob er bei diesem geplanten Lauf übersprungen wird. Das Feld '''IS_RUNNER_SKIPPED''' in der Tabelle '''SCHEDULER_JOB_NET_PLAN''' wird dann auf ''true'' gesetzt (d.h. dieser Knoten wird bei der Ausführung des Jobnetz Planes nicht ausgeführt).

Beispiel:
Ist ein Jobnetz für jeden Tag der Woche geplant, die Ausführung eines Knotens jedoch nur Freitags zugelassen, wird dieser Knoten an allen anderen Tagen übersprungen. 

Die Durchführung dieses Schrittes kann über den Parameter '''CheckFrequency''' unterbunden werden. 

=== Erzeugung der bootstrap Order eines Jobnetzplanes ('''JobNetExecutor''') ===
Der JobNetPlanExecutor erzeugt für alle noch nicht ausgeführten Jobnetzpläne einer Order die entsprechenden Order im JobScheduler. Entscheidend ist dabei die Konfiguration der Order zum Zeitpunkt der Erstellung des Jobnetzplanes in der Datenbank (siehe JobNetPlanCreator).

Die Order erhält dabei als zusätzliche Parameter '''uuid_jobnet_identifier''' (die eindeutige ID des Jobnetz Planes) und '''jobnet''' (den Namen der Jobkette, welche die Order ausführen soll).

Die Durchführung dieses Schrittes kann über den Parameter '''StartOrder''' unterbunden werden. 


Um sicher zu gehen, dass die Order mit einer uuid gestartet wird, kann in der Operations GUI vor dem Start der Order mit  ''Start order parameterized'' aus dem Order Menü kontrolliert werden, ob der Order eine uuid zugewiesen worden ist.

== Ausführung eines Jobnetzes ==
Voraussetzung für die Ausführung eines Jobnetzes ist die Existenz einer bootstrap order. Diese wird erst mit der Ausführung des JobNetExecutor erzeugt. Ohne die Vorbereitung des Jobnetzes, wie sie unter ''Erzeugung eines Jobnetzes'' beschrieben wird, ist ein Jobnetz nicht ausführbar.</text>
    </revision>
  </page>
  <page>
    <title>Job networks with JobScheduler</title>
    <ns>0</ns>
    <id>294</id>
      <sha1>6nporfi0xjyv12iz793ruegmxettvxz</sha1>
    <revision>
      <id>2344</id>
      <timestamp>2013-03-26T12:01:56Z</timestamp>
      <contributor>
        <username>Sosss</username>
        <id>15</id>
      </contributor>
      <text xml:space="preserve" bytes="7307">[[Category:Job configuration]][[Category:Job network]][[category:Jobnet]]

== Job network installation and configuration ==
Job networks are defined using parameterised orders in the JobScheduler Live folder. The network is built using the '''successor''' and '''predecessor''' parameters. The first order in a job network is the so-called Bootstrap Order (Node A).

[[File:simple_jobnet.png]]

''Note that for simplicity, only the '''successor''' and '''predecessor''' parameters are shown in this diagram: other parameters, such as '''script_to_execute''' and '''on_demand''' can also be set and are described in detail later in this text.''

A job network uses a generic job chain that executes a generic job. For this reason each order in the network requires a '''script_to_execute''' parameter, that is forwarded to the generic job and specifies the shell command that is to be executed. ''Job networks currently only execute shell jobs.''

=== Possible run-time definitions ===
The start time of a job network is set using the Bootstrap Order. There are three possible ways to set the start time of a job network:

==== Definition of an specific start time ====
The standard method for defining specific order start times can be used for the bootstrap order. However, this comes with the restriction that the order must have a '''single_start'''. (Note that while repeat intervals are not supported directly, they may achieved by setting run times for the generation of the job network work plan and the subsequent, immediate start of the job network).

==== Start of the job network as required ====
The '''on_demand='true'''' order parameter can be used to generate the job network Bootstrap Order. However, its use also means that the order can only be started as required. The '''on_demand''' parameter also overwrites any already existing run time definitions.

==== Immediate start of the job network after generation of the job network work plan ====
A job network will be started immediately after its work plan has been generated if neither the '''on_demand''' parameter nor a run time definition is set for the bootstrap order.

== Generation of a job network == 
A job network has to be stored in a database before it can be executed. A job chain is available for this: the chain being specified in a suitable order for the job network start node. The job network will then be built up in the database using the '''sucessor''' parameter.

The '''jobnet_plan_creator''' job chain then saves the job chain defintion from the JobScheduler configuration to the database and generates the start order for the execution of the job network.

An order to start this job chain will contain the '''JobChainName''' and '''OrderId''' parameters. 
For example:
 &lt;order title=&quot;schedule a jobnet&quot;&gt;
    &lt;params&gt;
        &lt;param name=&quot;JobChainName&quot; value=&quot;simple_jobnet&quot; /&gt;
        &lt;param name=&quot;OrderId&quot; value=&quot;A&quot; /&gt;
    &lt;/params&gt;
    &lt;run_time /&gt;
 &lt;/order&gt;
This order sepecifies the job network start node or Bootstrap Order.

''On productive systems such orders generally run overnight and are used to produce daily work plans for the job networks that are to be run.''

* '''OrderId''' specifies the job network Bootstrap Order.
* '''JobChainName''' specifies the generic job chain that is to be executed by the order.

The '''JobnetPlanCreator''' job carries out the following steps to create and execute a jobnet:

=== Saves the job network in a database ('''JobNetCreator''') ===
The JobNetCreator job transfers a job network definition from the JobScheduler configuration to a database. The job network nodes (i.e. the JobScheduler configuration orders) are transfered to the ''SCHEDULER_JOB_NET_NODES'' table and the edges (i.e. the connections between the nodes) to the ''SCHEDULER_JOB_NET_EDGES'' table.

Note that this chain ONLY saves unique identification information about a node (order name, job chain, SchedulerId) and not information about the configuration of the node itself.

This step is '''always''' executed and cannot controlled by parameter settings.

=== Generates the job network work plan ('''JobNetPlanCreator''') ===
The JobNetPlanCreator generates a job network plan - i.e. an executable job network instance - from a job network, as defined in the ''SCHEDULER_JOB_NET_NODES'' and ''SCHEDULER_JOB_NET_EDGES'' tables and information saved in the JobScheduler configuration.  
This plan is saved in the ''SCHEDULER_JOB_NET_PLAN'' table.
A job network has to exist in the database before the corresponding job network plan can be generated: for this reason execution of the ''JobNetCreators'' job is implicit with execution of the ''JobNetPlanCreators'' job.

A job network plan will be allocated a Unique User ID (UUID) by the ''JobNetPlanCreator'' job.

This step is '''always''' executed and cannot controlled by parameter settings.

=== Checks the run time behaviour of the job net nodes ('''FrequencyChecker''') ===
The frequency checker examines the run time definition of every single node of a job network. This means that a decision is made for every node instance in a job network plan as to whether the node will be skipped or executed in the current plannde run. The '''IS_RUNNER_SKIPPED''' field in the '''SCHEDULER_JOB_NET_PLAN''' table is then set to ''true'' (i.e. the node will be ignored when the job network plan is executed).

Example:
If a job network is planned for every day of the week and one node may only run on Fridays, this node will be missed out on all the other days the network is run. 

The execution of this step can be suppressed by setting the '''CheckFrequency''' parameter.

=== Generates the bootstrap order for the job network plan ('''JobNetExecutor''') ===
The JobNetPlanExecutor generates an order for the corresponding order in  the JobScheduler for all job network plans that have not yet been executed. This job uses order configuration at the time at which job network plan is saved in the database (see JobNetPlanCreator).

This job also adds two parameters to the order: the '''uuid_jobnet_identifier''' (the unique ID of the job network plan) und the '''jobnet''' (the name of the job chain that is to execute the order).

The execution of this step can be suppressed by setting the '''StartOrder''' parameter.

''Start order parameterized'' in the Operations GUI can be used before an order is started to check whether the order has been allocated a uuid.

== Execution of a job network ==
A bootstrap order must exist before a job network can be executed. The network will then be executed when the JobNetExecutor job is run. A job network cannot be executed if it is not suitably prepared, as is described in the ''Generation of a job network'' section above.


[[File:Wiki-rabbit-left.jpg]] &lt;&lt;
[[JobScheduler_FAQ| back to all FAQs]]</text>
    </revision>
  </page>
</mediawiki>
