<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="scheduler_job_documentation_v1.1.xsl"?>
<description xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1 http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd">

  <job name  = "JobSchedulerDequeueEventsJob"
       title = "Dequeues Events"
       order = "both"
       tasks = "1">
    <script language   = "java"
            java_class = "sos.scheduler.job.JobSchedulerDequeueEventsJob"
            resource   = "1"/>
  </job>

  <releases>
    <release id="1.0" created="2008-05-07" modified="2008-05-07">
      <title>Version 1.0</title>
      <author name="Andreas Püschel" email="andreas.pueschel@sos-berlin.com"/>
      <note language="de">
        <div xmlns="http://www.w3.org/1999/xhtml">
        Initiale Auslieferung
        </div>
      </note>
      <note language="en">
        <div xmlns="http://www.w3.org/1999/xhtml">
        Initial Release
        </div>
      </note>
    </release>
  </releases>

  <resources>
    <file os="all" type="java" file="sos.scheduler.jar" id="1">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Standard-Job der Auslieferung</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Standard job in distribution</div></note>
    </file>
    <file os="all" type="java" file="sos.spooler.jar" id="2">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Klasse Job_Impl</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Class Job_Impl</div></note>
    </file>
    <file os="all" type="java" file="sos.util.jar" id="3">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Klasse SOSLogger</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Class SOSLogger</div></note>
    </file>
    <file os="all" type="java" file="sos.hostware.jar" id="4">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Klasse File, Record</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Class File, Record</div></note>
    </file>
  </resources>

  <configuration>
    <params id="job_parameter">
      <param name="event_file" default_value="./logs/scheduler.events" required="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Der Parameter enthält den Namen der Datei, aus drm zwischengespeicherte Events versendet werden.
            Wird kein Wert angegeben, dann verwendet der Job die Datei <em>scheduler.events</em>
            aus dem Verzeichnis, das für die Job Scheduler Protokolle konfiguriert wurde, z.B. 
            <em>./logs</em>.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            This parameter specifies the path and name of the file in which events have 
            previously been stored.
            If this value is left blank then the job will use the file <em>scheduler.events</em>
            from the directory that was configured for the Job Scheduler log files, i.e.
            <em>./logs</em>.
          </div>
        </note>
      </param>

      <param name="supervisor_host" default_value="Supervisor Host" required="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Der Parameter benennt den Hostnamen der Job Scheduler Supervisor Instanz, die
            Events verarbeitet. Wird kein Wert angegeben, dann wird der für die 
            Workload Instanz konfigurierte Hostname des Supervisors verwendet, 
            d.i. <code>&lt;config supervisor="host:port"/&gt;</code> aus der Konfigurationsdatei
            <em>./config/scheduler.xml</em>.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            This parameter specifies the host name of the Job Scheduler Supervisor instance
            that should process events. Should no value be specified then the Supervisor host name
            will be used that has been configured for the Workload Instance by
            d.i. <code>&lt;config supervisor="host:port"/&gt;</code> from the configuration file
            <em>./config/scheduler.xml</em>.
          </div>
        </note>
      </param>

      <param name="supervisor_port" default_value="Supervisor Port" required="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Der Parameter benennt die Port-Nummer der Job Scheduler Supervisor Instanz, die
            Events verarbeitet. Wird kein Wert angegeben, dann wird der für die 
            Workload Instanz konfigurierte Port des Supervisors verwendet, 
            d.i. <code>&lt;config supervisor="host:port"/&gt;</code> aus der Konfigurationsdatei
            <em>./config/scheduler.xml</em>.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            This parameter specifies the port number of the Job Scheduler Supervisor instance
            that should process events. Should no value be specified then the Supervisor port number
            will be used that has been configured for the Workload Instance by
            <code>&lt;config supervisor="host:port"/&gt;</code> from the configuration file
            <em>./config/scheduler.xml</em>.
          </div>
        </note>
      </param>

      <param name="supervisor_timeout" default_value="15" required="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Der Parameter benennt den Timeout in Sekunden, währenddessen auf einen
            Verbindungsaufbau zur Job Scheduler Supervisor Instanz gewartet wird.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            This parameter specifies the timeout in seconds for which 
            an attempt is made to connect to the Job Scheduler Supervisor instance.
          </div>
        </note>
      </param>

      <param name="supervisor_job_chain" default_value="scheduler_event_service" required="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Der Parameter benennt den Namen der Job-Kette in der Job Scheduler Supervisor Instanz,
            die Events verarbeitet.
            Der voreingestellte Wert entspricht der Auslieferung.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            This parameter specifies the name of the job chain in the Job Scheduler
            Supervisor instance, that handles events. The Job Scheduler distribution makes
            use of the above default value.
          </div>
        </note>
      </param>
    </params>
  </configuration>

  <documentation language="de">
    <div xmlns="http://www.w3.org/1999/xhtml">
      Jobs des Job Schedulers können Events erzeugen, die von einer Job Scheduler
      Supervisor Instanz verarbeitet werden. Dazu werden im Supervisor Event Handler
      konfiguriert, die individuelle Bedingungen implementieren, auf welche Events
      in welcher Weise reagiert werden soll, z.B. durch Starten weiterer Jobs und Job-Ketten.
      <br/><br/>
      Können solche Events vom Job Scheduler nicht sofort versendet werden, z.B. wenn
      die Supervisor Instanz nicht erreichbar oder nicht gestartet ist, dann werden
      sie in einer Datei <em>scheduler.events</em> im Protokoll-Verzeichnis <em>./logs</em>
      zwischengespeichert. 
      <br/><br/>
      Dieser Job automatisiert den wiederholten Versand von Events, die zwischengespeichert wurden.
      Dazu wird eine vorhandene Datei zunächst in <em>scheduler.events~</em> umbenannt, damit
      andere Jobs parallel weitere Events zwischenspeichern können, diese legen die Datei
      automatisch an sofern sie nicht vorhanden ist. Ist bereits eine Datei <em>scheduler.events~</em>
      vorhanden, dann wird diese verwendet und es erfolgt keine Umbenennung.
      Nach erfolgreicher Verarbeitung wird <em>scheduler.events~</em> entfernt, im Fehlerfall
      bleibt diese Datei erhalten.
      <br/><br/>
      Der Job kann auftragsgesteuert oder als Standard-Job betrieben werden.
      Er soll mit einem regelmäßigen Wiederholungsintervall gestartet werden, z.B. für 
      einen wiederholten start alle fünf Minuten mittels:
      <code><pre>
      &lt;run_time&gt;&lt;period repeat="300"/&gt;&lt;/run_time&gt;
      </pre></code>
    </div>
  </documentation>

  <documentation language="en">
    <div xmlns="http://www.w3.org/1999/xhtml">
      During job execution in a Job Scheduler Workload instance events could be created 
      that should be processed by a Job Scheduler Supervisor Instance. Therefore 
      event handlers are configured in the Supervisor that implement individual conditions
      that state to which events should be reacted, e.g. by starting other jobs and job chains.
      <br/><br/>
      If such events cannot be sent immediately by the Job Scheduler, for example, 
      if the Supervisor instance is not accessible or is not started, 
      then these events will be stored in a file <em>scheduler.events</em>
      in the <em>./logs</em> directory for later dequeueing.
      <br/><br/>
      This job tries to send events that have previously been stored in a queue file.
      In a first step the file <em>scheduler.events</em> is renamed to <em>scheduler.events~</em>
      in order to allow other jobs to store events in parallel, as such jobs would create the
      file <em>scheduler.events</em> should it not be available. If a file <em>scheduler.events~</em>
      is already available then this file will be used instead of renaming the original file.
      After successful processing the file <em>scheduler.events~</em> will be removed.
      <br/><br/>
      This job can be triggered by orders or executed as a standard job.
      It should start on a regular basis, e.g. for repeated processing every file minutes by:
      <code><pre>
      &lt;run_time&gt;&lt;period repeat="300"/&gt;&lt;/run_time&gt;
      </pre></code>
    </div>
  </documentation>

</description>