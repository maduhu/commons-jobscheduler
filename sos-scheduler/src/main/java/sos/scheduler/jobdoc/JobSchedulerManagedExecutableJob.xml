<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="scheduler_job_documentation_v1.1.xsl"?>
<description xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1 http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd">

  <job name  = "JobSchedulerManagedExecutableJob"
       title = "Launch Executable Files"
       order = "both"
       tasks = "unbounded">
    <script language   = "java"
            java_class = "sos.scheduler.managed.JobSchedulerManagedExecutableJob"
            resource   = "1">
    </script>
  </job>

  <releases>
    <release id="1.1" created="2006-11-29" modified="2006-11-29">
      <title>Version 1.1</title>
      <author name="Andreas Liebert" email="andreas.liebert@sos-berlin.com"/>
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">neue Task/Order Parameter exit_code, timed_out</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">New task/order parameters exit_code, timed_out</div></note>
    </release>
    <release id="1.0" created="2006-05-11" modified="2006-05-11">
      <title>Version 1.0</title>
      <author name="Andreas Liebert" email="andreas.liebert@sos-berlin.com"/>
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Initiale Auslieferung</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Initial release</div></note>
    </release>    
  </releases>

  <resources>
    <file os="all" type="java" file="sos.scheduler.jar" id="1">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Standard-Job der Auslieferung</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Standard job in distribution</div></note>
    </file>
    <file os="all" type="java" file="sos.spooler.jar" id="2">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Klasse Job_Impl</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Class Job_Impl</div></note>
    </file>
    <file os="all" type="java" file="sos.util.jar" id="3">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Klasse SOSLogger</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Class SOSLogger</div></note>
    </file>
    <file os="all" type="java" file="sos.connection.jar" id="4">
      <note language="de"><div xmlns="http://www.w3.org/1999/xhtml">Datenbankverbindungs Klassen</div></note>
      <note language="en"><div xmlns="http://www.w3.org/1999/xhtml">Database connection classes</div></note>
    </file>

    <database required="false">
      <resource name="SCHEDULER_MANAGED_JOBS" type="table">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Die Tabelle nimmt die Definitionen der Jobs auf und
            wird mit der Web-Oberfläche der Managed Jobs verwaltet.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            This table contains the job definitions and
            is administered using the Managed Jobs web interface.
          </div>
        </note>
      </resource>
      <resource name="SCHEDULER_MANAGED_ORDERS" type="table">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Die Tabelle nimmt die Definitionen der Aufträge auf und
            wird mit der Web-Oberfläche der Managed Jobs verwaltet.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            This table contains the order definitions and
            is administered using the Managed Jobs web interface.
          </div>
        </note>
      </resource>
    </database>
  </resources>

  <configuration>
    <note language="de">
      <div xmlns="http://www.w3.org/1999/xhtml">
      Die Parameter des Jobs können als Job- oder Auftragsparameter kommen oder
      aus den Tabellen SCHEDULER_MANAGED_JOBS oder SCHEDULER_MANAGED_ORDERS
      gelesen werden.
      </div>
    </note>
    <note language="en">
      <div xmlns="http://www.w3.org/1999/xhtml">
      The parameters for this job may be set as job or order parameters or they
      may be read from the SCHEDULER_MANAGED_JOBS or SCHEDULER_MANGED_ORDERS tables.
      </div>
    </note>
    <params id="job_parameter">

      <param name="ignore_error" required="false" default_value="false" id="ignore_error">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Bei true werden Fehler des executables ignoriert
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            If set to "true", errors of the executable will be ignored.
          </div>
        </note>
      </param>
      <param name="scheduler_order_ignore_error" required="false" default_value="false" reference="ignore_error" />
      <param name="ignore_signal" required="false" default_value="false" id="ignore_signal">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Bei true werden Rückgabesignale des executables ignoriert
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            If set to "true", signals of the executable will be ignored.
          </div>
        </note>
      </param>
      <param name="scheduler_order_ignore_signal" required="false" default_value="false" reference="ignore_signal"/>
      <param name="ignore_stderr" required="false" default_value="false" id="ignore_stderr">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Bei true werden Ausgaben nach stderr nicht als Fehler gewertet.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            If set to "true", output to stderr will not be treated as an error.
          </div>
        </note>
      </param>
      <param name="scheduler_order_ignore_stderr" required="false" default_value="false" reference="ignore_stderr"/>
      <param name="ignore_timeout" required="false" default_value="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Bei true wird ein timeout nicht als Fehler gewertet.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            If set to "true", reaching a timeout will not be treated as an error.
          </div>
        </note>
      </param>
      <param name="own_process_group" required="false" default_value="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            own_process_group=1 lässt den Subprozess in einer eigenen Prozessgruppe starten.
            Wenn der Scheduler den Subprozess abbricht, bricht er die ganze Prozessgruppe ab.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
			own_process_group allows a subprocess to run in its own process group.
			When the Job Scheduler then stops the subprocess, then it stops the complete process group.
          </div>
        </note>
      </param>
      <param name="timeout" required="false" id="timeout">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Enthält der Parameter als Wert eine positive Zahl, dann wird nach Ablauf der Anzahl Sekunden dieses Werts die Ausführung des Kommanods abgebrochen.<br/>
            Enthält ein Auftrag mehrere Kommandos, so gilt dieser Tiemout für jedes einzelne Kommando.<br/>
            Enthält der Parameter keinen Wert, dann können Kommandos beliebig lang ablaufen.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            The number of seconds to be allowed for a command to be executed.<br/>
            This timeout is applied to all the commands in an order.<br/>
            Commands running for longer than the time specified here will be terminated. Should no value be entered here, then commands can run as long as necessary. Negative values cause an error.
          </div>
        </note>
      </param>
      <param name="scheduler_order_timeout" required="false" reference="timeout" />
      <param name="log_file" required="false">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Als Wert des Parameters kann der Pfad und Name einer Protokolldatei des ausgeführten Kommandos angegeben werden, die automatisch vom Job Scheduler in das Protokoll übernommen wird.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            The name and path of the log file used for the executing command. This information will be automatically taken over by the Job Scheduler and incorporated in the Job Scheduler log.
          </div>
        </note>
      </param>
      <param name="command" required="false" id="command">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Auzuführendes executable. Mehrere Kommandos können durch newlines getrennt werden.
            Die Platzhalter ${name} und §{name} werden durch entsprechende Job- und
            Auftragsparameter ersetzt. Die $-Syntax funktioniert nur innerhalb der Managed Jobs.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Executable command. Multiple commands can be separated by newlines.
            The placeholders ${name} and §{name} will be replaced by values of job and
            order parameters. The $-syntax only works when using Managed Jobs.
          </div>
        </note>
      </param>
      <param name="scheduler_order_command" required="false" reference="command"/>
      <param name="priority_class" required="false" default_value="normal" id="priority_class">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Setzt die Prozesspriorität:
            <ul>
              <li>idle</li>
              <li>below_normal</li>
              <li>normal</li>
              <li>above_normal</li>
              <li>high</li>
            </ul>
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Sets the process priority:
            <ul>
              <li>idle</li>
              <li>below_normal</li>
              <li>normal</li>
              <li>above_normal</li>
              <li>high</li>
            </ul>
          </div>
        </note>
      </param>
      <param name="scheduler_order_priority_class" required="false" reference="priority_class"/>
    </params>
    <payload>
      <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Auftragsparameter überschreiben Jobparameter.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            Order parameters overwrite job parameters.
          </div>
        </note>
      <params reference="job_parameter"/>
    </payload>
  </configuration>

  <documentation language="de">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <p>Dieser Job startet ausführbare Dateien auf dem Rechner des Job Schedulers. Dazu
		 führt der Job den Befehl im Feld COMMAND als Shell Aufruf aus. Dadurch können Programme,
		 die nicht die Job Scheduler API verwenden, auf einfache Weise als Jobs ausgeführt werden, ähnlich
		 einem Cron-Job.
	  </p>
	  <p>Die Ausgaben, die der Job nach stdout schreibt, werden in das Protokoll des Jobs aufgenommen. Möchte
		 man über den Ablauf eines Jobs informiert bleiben, so kann man in der Konfigurationsdatei <code>factory.ini</code> des
		 Job Schedulers die Einstellung <code>mail_on_success</code> aktivieren und erhält jedes Job-Protokoll zugesendet.
         Die stdout und stderr Ausgaben werden ausserdem in die Task und Order Parameter
         <code>std_err_output</code> bzw. <code>std_out_output</code> geschrieben, um für die Folgeverarbeitung
         zur Verfügung zu stehen.
	  </p>
	  <p>Liefert die ausführbare Datei einen Rückgabewert, der einen Fehler anzeigt, so wird dies als
		 Fehler des Jobs gewertet. Das gleiche gilt für Posix Signale unter Unix (SIGKILL etc.). In diesen Fällen wird
		(sofern <code>mail_on_error</code> eingeschaltet ist) eine Fehler-eMail verschickt und der Job beendet.
         Der Rückgabewert wird in den Task und Order Parameter <code>exit_code</code> geschrieben, um für die Folgeverarbeitung
         zur Verfügung zu stehen.
      </p>
      <p>Wird der ausgeführte Befehl wegen eines Timeouts abgebrochen, so wird der Task und Order Parameter
         <code>timed_out</code> auf <code>true</code> gesetzt.
      </p>
    </div>
  </documentation>

  <documentation language="en">
   <div xmlns="http://www.w3.org/1999/xhtml">
    <p>
     This job starts executable files on the same computer as the Job
     Scheduler. To do this, the job executes the instruction as a shell
     call in the COMMAND line. This means that programs which do not use
     the Job Scheduler API can be easily run as jobs, similar to cron
     jobs.
    </p>
    <p>
     The output from an executable job which the job sends to stdout is
     included in the job protocol. Information about the course of a job
     in the form of the job log file can be obtained by e-mail. This can
     be obtained by activating the <code>mail_on_success</code> parameter in the Job
     Scheduler .ini file. Aditionally, the output of stderr and stdout is written
     to the task and order parameters <code>std_err_output</code> and
     <code>std_out_output</code> for post-processing.
    </p>
    <p>
     Should the executable file return an error message, then this is
     seen as failure of the job. This also applies to Posix Signals
     (SIGKILL, etc.). In these cases an error mail will be sent (in so
     far as <code>mail_on_error</code> is active) and the job ended.
     The exit code is written to the task and order parameter
     <code>exit_code</code> for post-processing.
    </p>
    <p>
      If the executed command has to be killed because of a timeout, the task
      and order parameter <code>timed_out</code> is set to <code>true</code>.
    </p>
   </div>
  </documentation>
</description>
