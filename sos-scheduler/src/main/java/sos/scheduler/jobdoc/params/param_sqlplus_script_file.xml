<?xml version="1.0" encoding="iso-8859-1"?>
<param xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xhtml="http://www.w3.org/1999/xhtml"
xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1 http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="sqlplus_script_file" required="false" DataType="SOSOptionCommandString"
    OptionName="SQLPlusScriptFile" Alias="command_script_file" see="" prefix="" scope="all">

    <note language="de">
        <title>SQL*Plus Script</title>
            <p>
                Der Wert des Parameters enthält eine oder mehrer Zeilen, die zusammen ein (SQL)Skript bilden.
                Alternativ kann als Wert des Parameters der Name einer Datei angegeben werden, die das auszuführende Script enthält.
            </p>

        <xhtml:div xmlns="http://www.w3.org/1999/xhtml">
        </xhtml:div>
    </note>
    <note language="en">
        <title>SQL*Plus Script</title>
        <p>The value of the parameter contains one or more lines ot text, which together is a (SQL*Plus) script.
                 Alternatively, the name of a file can be specified that contains the script.
                 </p>
        <xhtml:div xmlns="http://www.w3.org/1999/xhtml">
        </xhtml:div>
    </note>
<codeexample type="sql*plus">
<title language="en"></title>
<title language="de"></title>
<embeddedExample>
WHENEVER SQLERROR EXIT SQL.SQLCODE
WHENEVER OSERROR EXIT FAILURE

column end_date new_value BCY_DATE
column period new_value PN_YEAR_PERIOD
column period_prev new_value PN_YEAR_PERIOD_PREV

select '0' as end_date from dual;
prompt SET end_date IS &amp;BCY_DATE;
/
select '0' as period from dual;
prompt SET period IS &amp;PN_YEAR_PERIOD;
/
select '0' as period_prev from dual;
prompt SET period_prev IS &amp;PN_YEAR_PERIOD_PREV;
/
prompt SET end_date IS 1;
exit;
</embeddedExample>
<explanation language="de"></explanation>
<explanation language="en"></explanation>
</codeexample>

<codeexample type="xml">
<title language="en"></title>
<title language="de"></title>
<embeddedExample>
<![CDATA[
<param  name="command_script_file" value="
WHENEVER SQLERROR EXIT SQL.SQLCODE
WHENEVER OSERROR EXIT FAILURE

column end_date new_value BCY_DATE
column period new_value PN_YEAR_PERIOD
column period_prev new_value PN_YEAR_PERIOD_PREV

select '0' as end_date from dual;
prompt SET end_date IS &BCY_DATE;
/
select '0' as period from dual;
prompt SET period IS &PN_YEAR_PERIOD;
/
select '0' as period_prev from dual;
prompt SET period_prev IS &amp;PN_YEAR_PERIOD_PREV;
/
prompt SET end_date IS &BCY_DATE;
exit;
"/>
]]>
</embeddedExample>
<explanation language="de">
<title>Parameter-Wert über mehrere Zeilen</title>
<p>
Der Wert eines Parameters kann zeilenweise angeordnet sein.
Dabei ist zu beachten (wie ansonsten auch), daß xml-spezifische Zeichen in Entities umgesetzt werden müssen, damit
die Wohlgeformtheit des XMLs erhalten bleibt.
</p>
</explanation>
<explanation language="en">
<title>Parameter value with many lines</title>
<p>
The value of a parameter can be arranged in lines.
It should be noted (as well as otherwise) that xml specific characters must be converted to entities in order
obtain the well-formedness of XML.
</p>
</explanation>
</codeexample>

<codeexample type="xml">
<title language="en"></title>
<title language="de"></title>
<embeddedExample>
        ...
        &lt;param  name="sqlplus_script_file" value="./config/live/sqlplus/sqlplus2.sql"/>
        ...
</embeddedExample>
<explanation language="de">
<title>Parameter-Wert aus Datei lesen</title>
<p>
Hier wird der Parameterwert von einer Datei geladen.
Die Datei muß existieren
</p>
</explanation>
<explanation language="en">
<title>Parameter value from file</title>
<p>
</p>
</explanation>
</codeexample>

</param>