<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="scheduler_job_documentation_v1.1.xsl"?>
<description xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1" 
xmlns:xhtml="http://www.w3.org/1999/xhtml"
xmlns:xi="http://www.w3.org/2001/XInclude" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1 
http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd">
  <job name="JobSchedulerCheckRunHistory" title="Check the last job run" order="both"
  
  category="Scheduling" >
    <script language="java" java_class="sos.scheduler.CheckRunHistory.JobSchedulerCheckRunHistoryJSAdapterClass" resource="1"/>
  </job>
  <releases>
    <release id="1.0" created="2010-08-27" modified="2011-07-27">
      <title>Version 1.0 - 2010-08-27</title>
      <author name="Oliver Haufe" email="oliver.haufe@sos-berlin.com"/>
      <note language="de">
        <div xmlns="http://www.w3.org/1999/xhtml">Initiale Auslieferung</div>
      </note>
      <note language="en">
        <div xmlns="http://www.w3.org/1999/xhtml">Initial release</div>
      </note>
    </release>
  </releases>
  <resources>
    <database required="true">
      <resource name="SCHEDULER_HISTORY" type="table">
        <note language="de">
          <div xmlns="http://www.w3.org/1999/xhtml">
            In dieser Tabelle werden alle Job-Läufe gespeichert.
          </div>
        </note>
        <note language="en">
          <div xmlns="http://www.w3.org/1999/xhtml">
            All job runs are stored in this table.
          </div>
        </note>
      </resource>
    </database>
    <xi:include href="./jars/sos.scheduler.jar.xml" parse="xml" />
	  <xi:include href="./jars/sos.spooler.jar.xml" parse="xml" />
	  <xi:include href="./jars/sos.util.jar.xml" parse="xml" />
	  <xi:include href="./jars/sos.SOSJobSchedulerModel.jar.xml" parse="xml" />
	  <xi:include href="./jars/sos.VirtualFileSystem.jar.xml" parse="xml" />
	  <xi:include href="./jars/sos.JSHelper.jar.xml" parse="xml" />
	  <xi:include href="./jars/sos.JobSchedulerLocalization.jar.xml" parse="xml" />
	  <xi:include href="./jars/log4j.jar.xml" parse="xml" />
  </resources>
  <configuration>
    <params id="job_parameter">
      <note language="de">
        <xhtml:div>Die folgenden Parameter können als Job- oder Auftragsparameter gesetzt werden</xhtml:div>
      </note>
      <note language="en">
        <xhtml:div>The parameters described below may be set as job or order parameters</xhtml:div>
      </note>
      <!-- z. Zt. gibt es nur eine operation = late -->
			<!--xi:include	href="./params/param_operation.CheckRunHistory.xml" parse="xml" /-->
			<!-- als JobScheduler Job wird der eigene Host und Port verwendet -->
			<!--xi:include	href="./params/param_SchedulerHostName.xml" parse="xml" /-->
			<!--xi:include	href="./params/param_SchedulerTcpPortNumber.xml" parse="xml" /-->
			<!-- solange nur JobName und nicht JobChainName/OrderId moeglich ist, ist JobName mandatory -->
		  <xi:include	href="./params/param_JobName.xml" parse="xml" />
		  <!--xi:include	href="./params/param_JobChainName.xml" parse="xml" /-->
		  <!--xi:include	href="./params/param_OrderId.xml" parse="xml" /-->
		  <xi:include	href="./params/param_message.CheckRunHistory.xml" parse="xml" />
		  <xi:include	href="./params/param_start_time.xml" parse="xml" />
		  <xi:include	href="./params/param_mail_to.xml" parse="xml" />
			<xi:include	href="./params/param_mail_cc.xml" parse="xml" />
		  <xi:include	href="./params/param_mail_bcc.xml" parse="xml" />	
    </params>
    <!--settings>
      <profile name="./config/factory.ini">
        <section name="spooler">
          <setting name="log_mail_to"/>
        </section>
      </profile>
    </settings-->          
  </configuration>
  <documentation language="de">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <p>Der Job prüft den letzten Lauf eines als Parameter übergebenen Jobs. Prüfkriterien sind 
      </p> 
      <ul>
        <li>Ist der übergebenen Job fehlerfrei gelaufen?</li>
        <li>Ist der übergebenen Job rechtzeitig beendet worden?</li>
      </ul>
      <p>Der Job geht in den Fehlerzustand, wenn der übergebene Job die Prüfkriterien nicht erfüllt. 
      Daher sollte der Job mit dem Attribut <code>stop_on_error="no"</code> konfiguriert werden.
      <br/>Soll im Fehlerfall eine Email versendet werden, so ist das <code>settings</code>-Element zu füllen.
      <br/><br/><strong>Beispiel:</strong>
<pre>
<i class="sourceName">(/checkRunHistory.job.xml)</i>
&lt;job title="Checks the last job run" order="yes" stop_on_error="no"&gt;
   &lt;settings&gt;
      &lt;mail_on_error&gt;yes&lt;/mail_on_error&gt;
      &lt;mail_on_warning&gt;yes&lt;/mail_on_warning&gt;
   &lt;/settings&gt;
   &lt;script language="java" java_class="sos.scheduler.CheckRunHistory.JobSchedulerCheckRunHistoryJSAdapterClass" /&gt;
&lt;/job&gt;

<i class="sourceName">(/checkRunHistory,myJob.order.xml)</i>
&lt;order title="Checks myJob"&gt;
  &lt;params&gt;        
    &lt;param name="JobName"    value="/myJob" /&gt;
    &lt;param name="message"    value="Der Job [JOB_NAME] ist heute bis 15:00h noch nicht erfolgreich gelaufen." /&gt;
    &lt;param name="start_time" value="0:00:00:00" /&gt;
    &lt;param name="mail_to"    value="admin@mycompany.com" /&gt;
  &lt;/params&gt;
  &lt;run_time&gt;
    &lt;period single_start="15:00"/&gt;
  &lt;/run_time&gt;      
&lt;/order&gt;

<i class="sourceName">(/checkRunHistory.job_chain.xml)</i>
&lt;job_chain title="Checks the last job runs" orders_recoverable="no" visible="yes"&gt;
    &lt;job_chain_node state="check" job="checkRunHistory" next_state="success" error_state="error"/&gt;
    &lt;job_chain_node.end state="success"/&gt;
    &lt;job_chain_node.end state="error"/&gt;
&lt;/job_chain&gt;
</pre><br/>
      </p>
    </div>
  </documentation>
  <documentation language="en">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <p>This job checks the last run of a parametrised job. Check criteria are:
      </p> 
      <ul>
        <li>Has the job run successfully?</li>
        <li>Was the job well-timed finished?</li>
      </ul>
      <p>The job comes in the error state, if the parametrised job not performs the check criteria. 
      Hence the job should be configured with the attribute <code>stop_on_error="no"</code>.
      <br/>If an email notification desired in the error case then the <code>settings</code> element must be set.
      <br/><br/><strong>Example:</strong>
<pre>
<i class="sourceName">(/checkRunHistory.job.xml)</i>
&lt;job title="Checks the last job run" order="yes" stop_on_error="no"&gt;
   &lt;settings&gt;
      &lt;mail_on_error&gt;yes&lt;/mail_on_error&gt;
      &lt;mail_on_warning&gt;yes&lt;/mail_on_warning&gt;
   &lt;/settings&gt;
   &lt;script language="java" java_class="sos.scheduler.CheckRunHistory.JobSchedulerCheckRunHistoryJSAdapterClass" /&gt;
&lt;/job&gt;

<i class="sourceName">(/checkRunHistory,myJob.order.xml)</i>
&lt;order title="Checks myJob"&gt;
  &lt;params&gt;        
    &lt;param name="JobName"    value="/myJob" /&gt;
    &lt;param name="message"    value="The Job [JOB_NAME] was not running successfully today until 15:00h." /&gt;
    &lt;param name="start_time" value="0:00:00:00" /&gt;
    &lt;param name="mail_to"    value="admin@mycompany.com" /&gt;
  &lt;/params&gt;
  &lt;run_time&gt;
    &lt;period single_start="15:00"/&gt;
  &lt;/run_time&gt;      
&lt;/order&gt;

<i class="sourceName">(/checkRunHistory.job_chain.xml)</i>
&lt;job_chain title="Checks the last job runs" orders_recoverable="no" visible="yes"&gt;
    &lt;job_chain_node state="check" job="checkRunHistory" next_state="success" error_state="error"/&gt;
    &lt;job_chain_node.end state="success"/&gt;
    &lt;job_chain_node.end state="error"/&gt;
&lt;/job_chain&gt;
</pre><br/>
      </p>
    </div>
  </documentation>
</description>
