<?xml version="1.0" encoding="iso-8859-1"?>
<!-- created at 12.10.2012 -->
<!-- $Id$ -->
<param xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1"
       xmlns:xhtml="http://www.w3.org/1999/xhtml"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1
     http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd "

       name="load_Class_Name"
       required="false"
       default_value=""
              DataType="SOSOptionJavaClassName"
    Category="Global,VFS"
	OptionName="loadClassName" Alias="VfsDataProvider"
	usewith="java_class_path"
	see="java_class_path"
	since="1.3.12.2282"
    scope="source,target"
              >

        <note language="de">
        <title>Data-Provider Klasse bestimmen</title>
          <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml">
          <p>
          Das virtuelle File-System (<doxylink linkto="com.sos.VirtualFileSystem">VFS</doxylink>) der SOS GmbH erlaubt es, für einzelne Data-Provider
          (z.B. sFtp, WebDav, ...)
          gezielt eine spezielle Implementation einer (Java-) Klasse (aka JAR-File) auszuwählen.
          Die Klasse muß das Interface ISOSVFSHandlerInterface implementieren.
          Diese wird dann im Programmablauf anstelle der voreingestellten Klasse dynamisch geladen und verwendet.
          </p>
          <p>
          Mit dieser Option wird der Name der zu verwendenden Klasse angegeben.
          Die Bibliothek, in der diese Klasse zu finden ist, muß im Klassenpfad enthalten sein.
          Ist sie es nicht, so ist der Parameter <paramref>java_class_path</paramref> entsprechend zu setzen.
          </p>
          <p>
          Gültige Namen für diesen Parameter sind zur Zeit für den Transfer Type "sFtp": com.sos.VirtualFileSystem.SFTP.SOSVfsSFtpJCraft, com.sos.VirtualFileSystem.SFTP.SOSVfsSFtp.
          </p>
          <p>
    Andere Klassen, insbesondere für weitere Transfer-Typen, sind in Vorbereitung.
          </p>

          </xhtml:div>
        </note>
        <note language="en">
        <title>load_Class_Name: Name of the Data-Provider class</title>
          <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml">
          <p>note_en
          </p>
          </xhtml:div>
        </note>

<codeexample>
<title language="en">codeexample_title_en</title>
<title language="de"></title>
<embeddedExample type="ini" >
 ; Test of parameter "loadClassName"
 [ftp_receive_2_wilma]
 include=wilma_host,wilma_user,do_sftp,BackgroundService,MailSettings
 source_loadClassName=com.sos.VirtualFileSystem.SFTP.SOSVfsSFtpJCraft
 target_loadClassName=com.sos.VirtualFileSystem.SFTP.SOSVfsSFtp
 operation=receive
 remote_dir=.
 ; file_spec=\.txt$
 file_spec=.*
 local_dir=C:/Users/kb/tmp/sosftp_inbound/

 log_filename=${TEMP}/sosftphistory.log
</embeddedExample>
<explanation language="de">
<title >codeexample_title_de</title>
<p>
In diesem Beispiel wird für einen Transfer via sFtp die Klasse com.sos.VirtualFileSystem.SFTP.SOSVfsSFtpJCraft verwendet.
Diese Klasse basiert auf <link href="http://www.jcraft.com/jsch/">JSch - Java Secure Channel</link>. </p>
</explanation>

<explanation language="en">
<title >codeexample_title_en</title>
<p>explanation_en</p>
</explanation>
</codeexample>

      </param>