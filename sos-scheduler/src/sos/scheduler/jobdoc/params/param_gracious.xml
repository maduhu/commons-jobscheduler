<?xml version="1.0" encoding="UTF-8"?>
<!--$Id$ -->
<param
	xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1"
	xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	name="gracious" Category="FileSystem" DataType="SOSOptionGracious"
	OptionName="Gracious" Alias="ErrorBehaviour" default_value="false"
	required="false"
	valuelist="true, false, all">
	<note language="de">
		<title>Fehlermeldungstoleranz aktivieren</title>
		<p>
			Aktiviert oder deaktiviert Fehlermeldungen, die aufgrund einer
			leeren Ergebnisliste der im Job auszuführenden Operation
			ausgelöst
			werden können, und steuert damit den Ablauf der Schritte (Knoten) in
			einer Job-Kette.
			</p>
		<p>
			Gültige Werte:
			<em>false, 0, off, no, n, nein, none</em>
			,
			<em>true, 1, on, yes, y, ja, j</em>
			und
			<em>all</em>
		</p>
		<p> Bei einer leeren Ergebnisliste der Operation
			ergibt sich folgendes
			Verhalten eines Jobs bzw. einer Job-Kette bezüglich
			der Meldung eines
			"Fehlers":
			</p>
		<table xmlns="http://www.w3.org/1999/xhtml" border="1" cellspacing="0">
			<tr>
				<th>
					<code>GRACIOUS</code>
				</th>
				<th>
					<code>Standalone-Job</code>
				</th>
				<th>
					<code>JobKetten-Job</code>
				</th>
			</tr>
			<tr>
				<td>false, 0, off, no, n, nein, none</td>
				<td>
					error log,
					<br />
					Task error
				</td>
				<td>
					error log,
					<br />
					set_state error
				</td>
			</tr>
			<tr>
				<td>true, 1, on, yes, y, ja, j</td>
				<td>
					no error log,
					<br />
					Task success
				</td>
				<td>
					no error log,
					<br />
					set_state error
				</td>
			</tr>
			<tr>
				<td>all</td>
				<td>
					no error log,
					<br />
					Task success
				</td>
				<td>
					no error log,
					<br />
					set_state success
				</td>
			</tr>
		</table>
	</note>
	<note language="en">
		<title>Specify error message tolerance</title>
		<p>
			Enables or disables error messages that are caused by an
			empty
			result-set, which is the result of an operation, executed by the job.
			Therefore this parameter can control the sequence of nodes or states
			in a job-chain.
    </p>
		<p>
			Valid values:
			</p>
			<p>
			<em>false, 0, off, no, n, nein, none</em>
			,
			<em>true, 1, on, yes, y, ja, j</em>
			and
			<em>all</em>.
		</p>
		<p>
			The following rules apply when
			the result-set is empty:
		</p>
		<table border="1" cellspacing="0">
			<tr>
				<th>
					<code>GRACIOUS</code>
				</th>
				<th>
					<code>Standalone-Job</code>
				</th>
				<th>
					<code>Order-Job</code>
				</th>
			</tr>
			<tr>
				<td>false, 0, off, no, n, nein, none</td>
				<td>
					error log,
					<br />
					Task error
				</td>
				<td>
					error log,
					<br />
					set_state error
				</td>
			</tr>
			<tr>
				<td>true, 1, on, yes, y, ja, j</td>
				<td>
					no error log,
					<br />
					Task success
				</td>
				<td>
					no error log,
					<br />
					set_state error
				</td>
			</tr>
			<tr>
				<td>all</td>
				<td>
					no error log,
					<br />
					Task success
				</td>
				<td>
					no error log,
					<br />
					set_state success
				</td>
			</tr>
		</table>
		<p>
		For example, the setting "gracious=all" will suppress all errors regarding an empty result-set and will terminate a Job (standalone and inside a jobchain)
		as it would be without errors.
		</p>
	</note>
</param>