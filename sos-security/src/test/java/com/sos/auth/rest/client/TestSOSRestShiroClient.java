package com.sos.auth.rest.client;

import static org.junit.Assert.*;

import java.io.File;
import java.net.MalformedURLException;
import java.util.HashMap;
import java.util.List;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Test;

import com.sos.auth.SOSJaxbSubject;
import com.sos.auth.rest.SOSShiroCurrentUserAnswer;
import com.sos.auth.rest.SOSWebserviceAuthenticationRecord;
import com.sos.auth.rest.permission.model.SOSPermissionShiro;

/** \class TestSOSRestShiroClient
 * 
 * \brief TestSOSRestShiroClient -
 * 
 * \details
 *
 * \section TestSOSRestShiroClient.java_intro_sec Introduction
 *
 * \section TestSOSRestShiroClient.java_samples Some Samples
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author Uwe Risse \version 06.03.2014 \see reference
 *
 * Created on 06.03.2014 17:39:33 */

public class TestSOSRestShiroClient {

    private static final String JETTY_REST_URL_ROLE = "http://8of9:40002/jobscheduler/rest/sosPermission/role?user=%s&pwd=%s&role=%s";
    private static final String JETTY_REST_URL_PERMISSION = "http://8of9:40002/jobscheduler/rest/sosPermission/permission?user=%s&pwd=%s&permission=%s";
    private static final String LDAP_PASSWORD = "sos01";
    private static final String LDAP_USER = "SOS01";
    private static final String JETTY_URL = "http://8of9:40002/jobscheduler/rest/sosPermission/permissions?user=%s&pwd=%s";
    @SuppressWarnings("unused")
    private final String conClassName = "TestSOSRestShiroClient";

    public TestSOSRestShiroClient() {
        //
    }

    @BeforeClass
    public static void setUpBeforeClass() throws Exception {
    }

    @AfterClass
    public static void tearDownAfterClass() throws Exception {
    }

    @Before
    public void setUp() throws Exception {

    }

    @After
    public void tearDown() throws Exception {
    }

    @Test
    @Ignore("Test set to Ignore for later examination")
    public void testClientJaxb() throws MalformedURLException {

        SOSRestShiroClient sosRestShiroClient = new SOSRestShiroClient();

        SOSWebserviceAuthenticationRecord sosWebserviceAuthenticationRecord = new SOSWebserviceAuthenticationRecord();
        sosWebserviceAuthenticationRecord.setUser(LDAP_USER);
        sosWebserviceAuthenticationRecord.setPassword(LDAP_PASSWORD);
        sosWebserviceAuthenticationRecord.setResource(JETTY_URL);

        SOSPermissionShiro shiro = sosRestShiroClient.getPermissions(sosWebserviceAuthenticationRecord);

        String permissisonsJid = shiro.getSOSPermissions().getSOSPermissionJid().getSOSPermission().get(0);
        String permissisonsJoe = shiro.getSOSPermissions().getSOSPermissionJid().getSOSPermissionJoe().getSOSPermission().get(0);
        String permissisonsJoc = shiro.getSOSPermissions().getSOSPermissionJid().getSOSPermissionJoc().getSOSPermission().get(0);
        String permissisonsDashboard = shiro.getSOSPermissions().getSOSPermissionJid().getSOSPermissionDashboard().getSOSPermission().get(0);

        assertEquals("testClient", "sos:products:jid:execute", permissisonsJid);
        assertEquals("testClient", "sos:products:joe:execute", permissisonsJoe);
        assertEquals("testClient", "sos:products:joc:execute", permissisonsJoc);
        assertEquals("testClient", "sos:products:jid:dashboard:start_job", permissisonsDashboard);

    }

    @Test
    @Ignore("Test set to Ignore for later examination")
    public void testClientJaxbSubject() throws MalformedURLException {

        SOSRestShiroClient sosRestShiroClient = new SOSRestShiroClient();

        SOSWebserviceAuthenticationRecord sosWebserviceAuthenticationRecord = new SOSWebserviceAuthenticationRecord();
        sosWebserviceAuthenticationRecord.setUser(LDAP_USER);
        sosWebserviceAuthenticationRecord.setPassword(LDAP_PASSWORD);
        sosWebserviceAuthenticationRecord.setResource(JETTY_URL);

        SOSPermissionShiro sosPermissionShiro = sosRestShiroClient.getPermissions(sosWebserviceAuthenticationRecord);
        SOSJaxbSubject currentUser = new SOSJaxbSubject(sosPermissionShiro);

        assertEquals("testClientWithJaxb is authenticated", true, currentUser.isAuthenticated());
        assertEquals("testClientWithJaxb has role joe", true, currentUser.hasRole("joe"));
        assertEquals("testClientWithJaxb is permitted sos:products:jid:execute", true, currentUser.isPermitted("sos:products:jid:execute"));

    }

}
