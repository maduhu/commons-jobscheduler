package com.sos.scheduler.model;
/**
* \class JSConfigurationTest 
* 
* \brief JSConfigurationTest - 
* 
* \details
*
* \section JSConfigurationTest.java_intro_sec Introduction
*
* \section JSConfigurationTest.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author oh
* @version $Id$
* \see reference
*
* Created on 02.03.2011 10:38:02
 */
import com.sos.VirtualFileSystem.Factory.VFSFactory;
import com.sos.VirtualFileSystem.Interfaces.ISOSVFSHandler;
import com.sos.VirtualFileSystem.Interfaces.ISOSVfsFileTransfer;
import com.sos.VirtualFileSystem.Interfaces.ISOSVirtualFile;
import com.sos.VirtualFileSystem.Options.SOSFTPOptions;
import com.sos.scheduler.model.objects.Spooler;
import org.apache.log4j.Logger;
import org.junit.*;

/**
 * @author oh
 *
 */
public class JSConfigurationTest {
	@SuppressWarnings("unused")
	private final String					conClassName			= "JSConfigurationTest";
	private static Logger					logger					= Logger.getLogger(JSConfigurationTest.class);
	private static SchedulerObjectFactory	objFactory				= null;
	private ISOSVFSHandler					objVFS					= null;
	private ISOSVfsFileTransfer				objFileSystemHandler	= null;
	private SOSFTPOptions					objOptions				= null;

	public JSConfigurationTest() {
		//
	}

	/**
	 * \brief setUpBeforeClass
	 * 
	 * \details
	 *
	 * \return void
	 *
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		logger.debug("test start");
		objFactory = new SchedulerObjectFactory("8of9.sos", 4210);
		objFactory.initMarshaller(Spooler.class);
	}

	/**
	 * \brief tearDownAfterClass
	 * 
	 * \details
	 *
	 * \return void
	 *
	 * @throws java.lang.Exception
	 */
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
		// objFactory.getSocket().doClose();
		logger.debug("test ended");
	}

	/**
	 * \brief setUp
	 * 
	 * \details
	 *
	 * \return void
	 *
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
	}

	/**
	 * \brief tearDown
	 * 
	 * \details
	 *
	 * \return void
	 *
	 * @throws java.lang.Exception
	 */
	@After
	public void tearDown() throws Exception {
	}

	/**
	 * Prepare tests for FTPVfs
	 */
	private final void prepareLocalVfs() {
		try {
			objVFS = VFSFactory.getHandler("local");
			objFileSystemHandler = (ISOSVfsFileTransfer) objVFS;
		}
		catch (Exception e) {
			logger.error(e);
		}
	}

	/**
	 * Prepare tests for FTPVfs
	 */
	@SuppressWarnings("deprecation")
	private final void prepareFtpVfs() {
		objOptions = new SOSFTPOptions();
		objOptions.host.Value("8of9.sos");
		// objOptions.protocol.Value("ftp");
		// objOptions.port.Value("21");
		objOptions.user.Value("sos");
		objOptions.password.Value("sos");
		try {
			objVFS = VFSFactory.getHandler(objOptions.protocol.Value());
			objVFS.Connect(objOptions);
			objVFS.Authenticate(objOptions);
			objFileSystemHandler = (ISOSVfsFileTransfer) objVFS;
		}
		catch (Exception e) {
			logger.error(e);
		}
	}

	/**
	 * Test method for {@link com.sos.scheduler.model.JSConfiguration)}.
	 */
	@Test
	public final void loadSchedulerXMLLocal() {
		prepareLocalVfs();
		String strTestHotFolder = "Z:/8of9_buildjars_4210/config/scheduler.xml";
		ISOSVirtualFile pobjVirtualFile = objFileSystemHandler.getFileHandle(strTestHotFolder);
		JSConfiguration objJSConf = objFactory.createJSConfiguration(pobjVirtualFile);
		logger.info(objJSConf.toXMLString());
	}
	
	/**
	 * Test method for {@link com.sos.scheduler.model.JSConfiguration)}.
	 */
	@Test
	public final void loadSchedulerXMLFTP() {
		prepareFtpVfs();
		String strTestHotFolder = "/8of9_buildjars_4210/config/scheduler.xml";
		ISOSVirtualFile pobjVirtualFile = objFileSystemHandler.getFileHandle(strTestHotFolder);
		JSConfiguration objJSConf = objFactory.createJSConfiguration(pobjVirtualFile);
		logger.info(objJSConf.toXMLString());
	}
}
