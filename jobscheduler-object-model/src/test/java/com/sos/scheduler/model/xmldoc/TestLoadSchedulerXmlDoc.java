package com.sos.scheduler.model.xmldoc;

import org.apache.log4j.Logger;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import java.io.File;
 
/**
* \class TestLoadSchedulerXML 
* 
* \brief TestLoadSchedulerXML - 
* 
* \details
*
* \section TestLoadSchedulerXML.java_intro_sec Introduction
*
* \section TestLoadSchedulerXML.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author KB
* @version $Id$17.01.2011
* \see reference
*
* Created on 17.01.2011 19:26:09
 */

/**
 * @author KB
 *
 */
public class TestLoadSchedulerXmlDoc implements Runnable {

	private final String		conClassName	= "TestLoadSchedulerXML";
	private final String		testFilename	= "./JobSchedulerCanWrite.xml";
	private static Logger		logger			= Logger.getLogger(TestLoadSchedulerXmlDoc.class);

	TestLoadSchedulerXmlDoc() {
	}

	public void run() {

		@SuppressWarnings("unused")
		final String conMethodName = conClassName + "::run";

		File documentationFile = new File(testFilename);
		try {
			logger.debug("test start");
  			try {
  				 JAXBContext context = JAXBContext.newInstance( Description.class );
  				 Unmarshaller unmarshaller = context.createUnmarshaller();
  			 
  				Description description = (Description) unmarshaller.unmarshal( documentationFile );
  				logger.info(description.getJob().getScript().getLanguage());
  				
  			}

  			
			catch (JAXBException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		  
		}
		catch (Exception je) {
			je.printStackTrace();
		}

	} // private void run

}
