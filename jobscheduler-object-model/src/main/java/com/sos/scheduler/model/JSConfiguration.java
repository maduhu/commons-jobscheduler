package com.sos.scheduler.model;

import java.math.BigInteger;

import org.apache.log4j.Logger;

import com.sos.JSHelper.Annotations.JSOptionDefinition;
import com.sos.JSHelper.Options.SOSOptionPortNumber;
import com.sos.VirtualFileSystem.Interfaces.ISOSVirtualFile;
import com.sos.scheduler.model.objects.JSObjBase;
import com.sos.scheduler.model.objects.JSObjSpooler;
import com.sos.scheduler.model.objects.Spooler;

/** \class JSConfiguration
 * 
 * \brief JSConfiguration -
 * 
 * \details
 *
 * \section JSConfiguration.java_intro_sec Introduction
 *
 * \section JSConfiguration.java_samples Some Samples
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author oh
 * 
 * @version $Id$ \see reference
 *
 *          Created on 10.02.2011 13:22:07 */
/** @author oh */
public class JSConfiguration extends JSObjBase {

    private final String conClassName = "JSConfiguration";
    @SuppressWarnings("unused")
    private static final Logger logger = Logger.getLogger(JSConfiguration.class);
    private JSObjSpooler objSpooler;
    private Spooler.Config objConfig;
    /** \option Port \type SOSOptionPortNumber \brief Port - PortNumber of
     * JobScheduler
     *
     * \details PortNumber of JobScheduler
     *
     * \mandatory: true
     *
     * \created 11.02.2011 15:44:17 by KB */
    @JSOptionDefinition(name = "Port", description = "PortNumber of JobScheduler", key = "Port", type = "SOSOptionPortNumber", mandatory = true)
    public SOSOptionPortNumber Port = new SOSOptionPortNumber( // ...
            null, // ....
            conClassName + ".Port", // ...
            "PortNumber of JobScheduler", // ...
            "0", // ...
            "4444", // ...
            true);

    public JSConfiguration() {
        //
    }

    public JSConfiguration(final SchedulerObjectFactory schedulerObjectFactory) {
        super();
        objFactory = schedulerObjectFactory;
        objSpooler = objFactory.createSpooler();
        objConfig = getConfig();
    }

    public JSConfiguration(final SchedulerObjectFactory schedulerObjectFactory, final ISOSVirtualFile pobjVirtualFile) {
        super();
        objFactory = schedulerObjectFactory;
        objSpooler = objFactory.createSpooler(pobjVirtualFile);
        objConfig = getConfig();
    }

    public Spooler.Config getConfig() {
        if (objConfig == null) {
            if (objSpooler == null) {
                objConfig = new Spooler.Config();
            } else if (objSpooler.getConfig().size() == 0) {
                objConfig = new Spooler.Config();
                objSpooler.getConfig().add(objConfig);
            } else {
                objConfig = objSpooler.getConfig().get(0);
            }
        }
        return objConfig;
    }

    // public Spooler.Config load() {
    // @SuppressWarnings("unused")
    // final String conMethodName = conClassName + "::load";
    // Port.Value(objConfig.getPort().toString());
    // return objConfig;
    // } // load

    /** Gets the XML representation.
     * 
     * @return */
    public String toXMLString() {
        return objSpooler.toXMLString();
    }

    /** \brief toXMLFile
     * 
     * \details
     *
     * \return
     *
     * @return */
    public Object toXMLFile() {
        return objSpooler.toXMLFile();
    } // public Object toXMLFile

    /** Gets the value of the port property.
     * 
     * @return */
    // public String getPort() {
    // return objConfig.getPort().toString();
    // }
    public SOSOptionPortNumber getPort() {
        Port.Value(objConfig.getPort().toString());
        return Port;
    }

    /** Sets the value of the port property.
     * 
     * @param value */
    public void setPort(String value) {
        if (value == null) {
            objConfig.setPort(BigInteger.valueOf(0));
        } else {
            objConfig.setPort(new BigInteger(value));
        }
    }

    public void setPort(SOSOptionPortNumber pobjPortNumber) {
        String value = pobjPortNumber.Value();
        if (value == null) {
            objConfig.setPort(BigInteger.valueOf(0));
        } else {
            objConfig.setPort(new BigInteger(value));
        }
    }

}
