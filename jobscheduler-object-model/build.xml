<?xml version="1.0" encoding="iso-8859-1"?>
<project name="SOSJobSchedulerModel" basedir=".">

	<property name="ax.build.classpath" value="../_lib" />
    <import file="../com.sos.ant.helper/targets.global.xml" />
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="C:/Users/schaedi/.m2/repository/ant-contrib/ant-contrib/20020829/ant-contrib-20020829.jar"/>
	
	<property name="jar.version" value="1.3.11.1245" />
	<property name="work.dir" value="${basedir}/generate/temp" />
	<property name="target.base" value="${basedir}/src/com/sos/scheduler/model" />

	<target name="all"
		    depends="generateSchedulerEventObjects, java.clean, java.compile, java.jar, doxygen.documentation, mavenInstall"
		    description="generate objects, create jar and provide to maven">
	</target>
	<!--
	-->
	
	<target name="generateSchedulerEventObjects" 
		depends="-propertiesSchedulerEventObjects, -generateSchedulerObjects"
		description="abc"
	>
	</target>
	
    <!-- mvn install:install-file -Dfile=C:\Users\schaedi\eclipse\SOSJobSchedulerModel\build\lib\com.sos.scheduler.model.jar -DgroupId=com.sos.scheduler -DartifactId=com.sos.scheduler.model -Dversion=1.0 -Dpackaging=jar -->
	<target name="mavenInstall" description="install a jar in local maven repository">
		<exec executable="mvn.bat" dir="${basedir}">
			<arg value="install:install-file" />
			<arg value="-Dfile=./build/lib/SOSJobSchedulerModel.jar" />
			<arg value="-DgroupId=com.sos" />
			<arg value="-DartifactId=com.sos.SOSJobSchedulerModel" />
			<arg value="-Dversion=${jar.version}" />
			<arg value="-Dpackaging=jar" />
		</exec>
	</target>

	<!-- to be tested ...
     [exec] [INFO] Error deploying artifact: Failed to transfer file: http://archiva.sos:8080/archiva/repository/sos-release/com/sos/com.sos.SOSJobSchedulerModel/1.3.11.1235/com.sos.SOSJobSchedulerModel-1.3.11.1235.jar. Return code is: 401
     [exec] [INFO] For more information, run Maven with the -e switch	
	-->
	<target name="mavenDeploy" description="deploy a jar to maven repository">
		<exec executable="mvn.bat" dir="${basedir}">
			<arg value="deploy:deploy-file" />
			<arg value="-Durl=http://archiva.sos:8080/archiva/repository/sos-release" />
			<arg value="-DrepositoryId=sos-release" />
			<arg value="-Dfile=./build/lib/SOSJobSchedulerModel.jar" />
			<arg value="-DgroupId=com.sos" />
			<arg value="-DartifactId=com.sos.SOSJobSchedulerModel" />
			<arg value="-Dversion=${jar.version}" />
			<arg value="-Dpackaging=jar" />
		</exec>
	</target>

	<!--
	This target prepares the environment for the jaxb generation of the java classes
	-->
	<target name="-initSchedulerObjects">
		<delete dir="${work.dir}" />
		<mkdir dir="${work.dir}" />
	</target>

	<!--
	This target generates the java classes based on the contents of a given schema into the working folder
	and expands the classes with the defined baseclass. The result will be copied to the target
	source folder.
	-->
	<target name="-generateSchedulerObjects" depends="-initSchedulerObjects">

		<exec executable="xjc" dir="generate">
			<arg value="-d" />
			<arg value="${work.dir}" />
			<arg value="-nv" />
			<arg value="-extension" />
			<arg value="-p" />
			<arg value="${target.package}" />
			<arg value="${schema.name}" />
			<!--
			<arg value="-b" />
			<arg value="${binding.name}" />
			-->
		</exec>

		<replaceregexp byline="true">
			<regexp pattern="public class ([^\s]*) \{" />
			<substitution expression="public class \1 extends ${class.base} {" />
			<fileset dir="${work.dir}/${target.dir}">
				<include name="${class.pattern}" />
			</fileset>
		</replaceregexp>

		<move todir="./src/${target.dir}">
			<fileset dir="${work.dir}/${target.dir}" includes="*.java" />
		</move>
		
		<echo message="DONE !" />

	</target>

	<!--
	This target sets the properties for the generation of the scheduler event objects
	-->
	<target name="-propertiesSchedulerEventObjects">
		<property name="target.package" value="com.sos.scheduler.model.events" />
		<propertyregex property="target.dir"
		              input="${target.package}"
		              regexp="\."
		              replace="/"
					  global="true"
		              casesensitive="false" />
		<property name="schema.name" value="events.xsd" />
		<property name="binding.name" value="externalBind.xml" />
		<property name="class.pattern" value="Event*.java" />
		<property name="class.base" value="JSEventBase" />
		
		<echo>target.package=${target.package}</echo>
		<echo>target.dir=${target.dir}</echo>
		<echo>schema.name=${schema.name}</echo>
		<echo>binding.name=${binding.name}</echo>
		<echo>class.pattern=${class.pattern}</echo>
		<echo>class.base=${class.base}</echo>
	</target>

</project>
