<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Stefan Schädlich (Schering AG) --><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">	<xs:element name="Event">		<xs:annotation>			<xs:documentation>root element for all events provided by the Job Scheduler</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:choice>				<xs:element ref="EventLogError" minOccurs="0"/>				<xs:element ref="EventOrderStateChanged" minOccurs="0"/>				<xs:element ref="EventOrderTouched" minOccurs="0"/>				<xs:element ref="EventOrderStepStarted" minOccurs="0"/>				<xs:element ref="EventOrderStepEnded" minOccurs="0"/>				<xs:element ref="EventFolderChanged" minOccurs="0"/>				<xs:element name="FolderRemovedEvent" minOccurs="0"/>				<xs:element name="FolderCreatedEvent" minOccurs="0"/>				<xs:element ref="EventOrderFinished" minOccurs="0"/>				<xs:element ref="EventOrderSuspended" minOccurs="0"/>				<xs:element ref="EventOrderResumed" minOccurs="0"/>				<xs:element ref="EventSchedulerClosed" minOccurs="0"/>				<xs:element ref="EventTaskStarted" minOccurs="0"/>				<xs:element ref="EventTaskEnded" minOccurs="0"/>			</xs:choice>			<xs:attribute name="name" type="xs:string" use="required"/>		</xs:complexType>	</xs:element>	<xs:element name="EventLogError">		<xs:annotation>			<xs:documentation>event fired if the Job Scheduler detects an error</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoLog"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="InfoObjects">		<xs:annotation>			<xs:documentation>root element for all objects provided with the Job Scheduler events</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoLog"/>				<xs:element ref="InfoOrder"/>				<xs:element ref="InfoFolder"/>				<xs:element ref="InfoJob"/>				<xs:element ref="InfoJobChain"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="InfoLog">		<xs:annotation>			<xs:documentation>Log Object provided with log related events</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:attribute name="code" type="xs:string"/>			<xs:attribute name="message" type="xs:string"/>		</xs:complexType>	</xs:element>	<xs:element name="InfoOrder">		<xs:annotation>			<xs:documentation>Order object provided with Order related events</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:attribute name="id" type="xs:string" use="required"/>			<xs:attribute name="title" type="xs:string" use="required"/>			<xs:attribute name="state" type="xs:string" use="required"/>		</xs:complexType>	</xs:element>	<xs:element name="EventOrderStateChanged">		<xs:annotation>			<xs:documentation>event fired if the order state (job_chain_node) is changed</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoOrder"/>			</xs:sequence>			<xs:attribute name="previousState" type="xs:string" use="required"/>		</xs:complexType>	</xs:element>	<xs:element name="EventOrderTouched">		<xs:annotation>			<xs:documentation>event fired if an order is touched</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoOrder"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="InfoFolder">		<xs:annotation>			<xs:documentation>Folder object provided with folder events</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:attribute name="type" use="required">				<xs:simpleType>					<xs:restriction base="xs:string">						<xs:pattern value="folder"/>						<xs:pattern value="job"/>						<xs:pattern value="job_chain"/>						<xs:pattern value="order"/>						<xs:pattern value="processClass"/>						<xs:pattern value="schedule"/>						<xs:pattern value="plugin"/>					</xs:restriction>				</xs:simpleType>			</xs:attribute>			<xs:attribute name="path" type="xs:string" use="required"/>			<xs:attribute name="name" type="xs:string" use="required"/>			<xs:attribute name="timestamp" type="xs:dateTime" use="required"/>		</xs:complexType>	</xs:element>	<xs:element name="EventFolderChanged">		<xs:annotation>			<xs:documentation>event fired if an element of the configuration folder was changed</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoFolder"/>			</xs:sequence>			<xs:attribute name="previous_path" type="xs:string" use="required"/>			<xs:attribute name="previous_name" type="xs:string" use="required"/>		</xs:complexType>	</xs:element>	<xs:element name="InfoJob">		<xs:annotation>			<xs:documentation>Job object provided with job related events</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="InfoJobChain">		<xs:annotation>			<xs:documentation>JobChain object provided with job chain related events</xs:documentation>		</xs:annotation>	</xs:element>	<xs:element name="EventOrderFinished">		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoOrder"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="EventOrderSuspended">		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoOrder"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="EventOrderResumed">		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoOrder"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="EventSchedulerClosed">		<xs:annotation>			<xs:documentation>Kein InfoScheduler Object, weil der Scheduler nach diesem Event nicht mehr zur Verfügung steht.</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:attribute name="message" type="xs:string"/>		</xs:complexType>	</xs:element>	<xs:element name="InfoScheduler">		<xs:complexType>			<xs:attribute name="hostname" type="xs:string"/>			<xs:attribute name="port" type="xs:int"/>			<xs:attribute name="httpUrl" type="xs:string"/>			<xs:attribute name="version" type="xs:string"/>			<xs:attribute name="id" type="xs:string"/>		</xs:complexType>	</xs:element>	<xs:element name="EventOrderStepStarted">		<xs:annotation>			<xs:documentation>event fired if spooler_process of an order is started</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoOrder"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="EventOrderStepEnded">		<xs:annotation>			<xs:documentation>event fired if spooler_process of an order is ended</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoOrder"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="InfoTask">		<xs:annotation>			<xs:documentation>Task Object provided with task related events</xs:documentation>		</xs:annotation>		<xs:complexType>			<xs:attribute name="id" type="xs:string" use="required"/>		</xs:complexType>	</xs:element>	<xs:element name="EventTaskStarted">		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoTask"/>			</xs:sequence>		</xs:complexType>	</xs:element>	<xs:element name="EventTaskEnded">		<xs:complexType>			<xs:sequence>				<xs:element ref="InfoTask"/>			</xs:sequence>		</xs:complexType>	</xs:element></xs:schema>