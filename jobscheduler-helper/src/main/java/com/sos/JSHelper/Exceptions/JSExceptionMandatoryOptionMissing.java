package com.sos.JSHelper.Exceptions;
/* ---------------------------------------------------------------------------
 APL/Software GmbH - Berlin
##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
2007-11-26, kb@sos-berlin.com (sgx2343)
-------------------------------------------------------------------------------
<docu type="smcw" version="1.0">
<project>sos.dataswitch</project>
<name>JSExceptionMandatoryOptionMissing.java</name>
<title>Exception used if a mandatory Option is not specified
</title>
<description>
<para>
Exception used if a mandatory Option is not specified
</para>
</description>
<params>
</params>
<keywords>
	<keyword>Exception</keyword>
	<keyword>Option</keyword>
</keywords>
<categories>
<category>Exception</category>
</categories>
<date>2007-11-26</date>
<copyright>© 2006 by Klaus D. Buettner</copyright>
<author>kb@sos-berlin.com</author>
<changes>
 <change who='sgx2343' when='2007-11-26' id='created'>
   <what>
   <para>
   created
   </para>
   </what>
 </change>
</changes>
</docu>
---------------------------------------------------------------------------- */
/*!
 * @class JSExceptionMandatoryOptionMissing
 * @brief Exception used if a mandatory Option is not specified
 * 
 * ... more details regarding this class...
 * 
 * @author kb@sos-berlin.com
 */
public class JSExceptionMandatoryOptionMissing  extends JobSchedulerException {
	@SuppressWarnings("unused")
	private static final String	conClassName	= "JSExceptionMandatoryOptionMissing";	
	private static final long serialVersionUID = 1L;
    /*!
     * Construtor with message.
     *
     * @param pstrMessage the message-text of the exception
     */
    public JSExceptionMandatoryOptionMissing(String pstrMessage) {
        super(pstrMessage);
        this.Message(pstrMessage);
        this.Status(JobSchedulerException.PENDING);
        this.Category(CategoryOptions);
        this.Typ(TypeOptionMissing); 
        this.eMailSubject("Mandatory Option missing.");        
    }
    
	public JSExceptionMandatoryOptionMissing ()
	{
		this ("exception 'JSExceptionMandatoryOptionMissing' raised ...");
	} // public JSExceptionMandatoryOptionMissing
	
	public String ExceptionText () {
		String strT = null;
		strT = super.ExceptionText();
		return strT;
		}

} // public class JSExceptionMandatoryOptionMissing
