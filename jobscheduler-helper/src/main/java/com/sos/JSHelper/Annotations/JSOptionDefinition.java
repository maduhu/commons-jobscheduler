package com.sos.JSHelper.Annotations;

/** \class JSOptionDefinition - Annotation für eine JSOption
 * 
 * \brief JSOptionDefinition - Annotation für eine JSOption
 * 
 * \details
 *
 * \section JSOptionDefinition.java_intro_sec Introduction
 *
 * \section JSOptionDefinition.java_samples Some Samples
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author KB
 * 
 * @version $Id$14.06.2009 \see reference
 *
 *          Created on 14.06.2009 15:06:34 */
import static java.lang.annotation.ElementType.FIELD;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ FIELD })
@Retention(RetentionPolicy.RUNTIME)
public @interface JSOptionDefinition {

    /** \brief name - Der Name der Option
     * 
     * \details Hier wird der Name der Option angegeben. Mit diesem Namen wird
     * die Option von "aussen" angesprochen.
     * 
     * Das Schlüsselwort muß in der Annotation angegeben werden. \return String */
    String name();

    /** \brief description - Kurzbeschreibung der Option
     * 
     * \details Mit diesem Schlüsselwort wird eine Kurzbeschreibung der Option
     * angegeben. Diese Kurzbeschreibung wird verwendet in der Ausgabe, z.B. in
     * den Protokollen zur Laufzeit oder in der Prüfung auf Vorhandensein (siehe
     * Eigenschaft "mandatory").
     * 
     * Das Schlüsselwort muß in der Annotation angegeben werden. \return String */
    String description();

    /** \brief key - Schlüssel der Option
     * 
     * \details Mit dem Schlüssel wird festgelegt, wie die Option z.B. in einer
     * HashMap oder einer Property-Datei abgelegt ist bzw. wird. Der Schlüssel
     * kann mit dem Namen der Optionklasse ergänzt werden. Dann wird der Name
     * der Klasse als Präfix verwendet.
     * 
     * Das Schlüsselwort muß nicht angegeben werden, es ist optional. Wird es
     * nicht angegeben, so wird als Wert der Wert des Attributes "name"
     * verwendet. \example
     * 
     * @JSOptionDefinition (name"HostName",
     *                     description="Name of FTP-Host/Server", key="HostName"
     *                     )
     * 
     *                     \return String
     *
     * @return */
    String key() default "";

    /** \brief xmltagname - Name der Option in der XML-Ausgabe
     * 
     * \details Mit diesem Attribut der Annotation wird der Name des XML-Tags
     * festgelegt, der in der Ausgabe im XML-Format (siehe Methode toXML() )
     * verwendet wird.
     * 
     * Das Schlüsselwort muß nicht angegeben werden, es ist optional. Wird es
     * nicht angegeben, so wird als Wert der Wert des Attributes "name"
     * verwendet.
     * 
     * \return String
     *
     * @return */
    String xmltagname() default "";

    int size() default -1;

    // int pos();
    boolean mandatory() default false;

    String type() default "JSOptionString";

    String value() default "";

    String defaultvalue() default "";

} // public @interface JSOptionDefinition
