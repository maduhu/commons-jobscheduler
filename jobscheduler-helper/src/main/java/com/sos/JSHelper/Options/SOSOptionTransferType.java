package com.sos.JSHelper.Options;

import org.apache.log4j.Logger;

/** \class SOSOptionTransferType
 *
 * \brief SOSOptionTransferType -
 *
 * \details
 *
 * \section SOSOptionTransferType.java_intro_sec Introduction
 *
 * \section SOSOptionTransferType.java_samples Some Samples
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author KB
 * 
 * @version $Id$26.01.2011 \see reference
 *
 *          Created on 26.01.2011 15:56:25 */
/** @author KB */
public class SOSOptionTransferType extends SOSOptionStringValueList {

    /**
	 *
	 */
    private static final long serialVersionUID = 1359502923543333601L;
    private final String conClassName = "SOSOptionTransferType";
    private static final Logger logger = Logger.getLogger(SOSOptionTransferType.class);
    private enuTransferTypes enuTT = enuTransferTypes.local;

    public static enum enuTransferTypes {
        local, /* filesystem on localhost */
        file, /* same as local */
        ftp, sftp, ftps, ssh2, zip, mq, // Message Queue
        http, https, svn, webdav, smb, smtp, imap
        /* */;

        public String Text() {
            String strT = this.name();
            return strT;
        }

        public static String[] getArray() {
            String[] strA = new String[15];
            int i = 0;
            for (enuTransferTypes enuType : enuTransferTypes.values()) {
                strA[i++] = enuType.Text();
            }
            return strA;
        }
    }

    /** \brief SOSOptionTransferType
     *
     * \details
     *
     * @param pobjParent
     * @param pstrKey
     * @param pstrDescription
     * @param pstrValue
     * @param pstrDefaultValue
     * @param pflgIsMandatory */
    public SOSOptionTransferType(final JSOptionsClass pobjParent, final String pstrKey, final String pstrDescription, final String pstrValue,
            final String pstrDefaultValue, final boolean pflgIsMandatory) {
        super(pobjParent, pstrKey, pstrDescription, pstrValue, pstrDefaultValue, pflgIsMandatory);
        super.valueList(enuTransferTypes.getArray());
    }

    public void Value(final enuTransferTypes penuTT) {
        @SuppressWarnings("unused")
        final String conMethodName = conClassName + "::Value";
        enuTT = penuTT;
        String strT = penuTT.Text();
        super.Value(strT);
    } // private void Value

    public boolean isSFtp() {
        Text2Enum();
        return enuTT == enuTransferTypes.sftp;
    }

    public boolean isFtpS() {
        Text2Enum();
        return enuTT == enuTransferTypes.ftps;
    }

    public boolean isLocal() {
        Text2Enum();
        return enuTT == enuTransferTypes.local || enuTT == enuTransferTypes.file;
    }

    private void Text2Enum() {
        for (enuTransferTypes enuType : enuTransferTypes.values()) {
            if (strValue.equalsIgnoreCase(enuType.Text())) {
                enuTT = enuType;
                break;
            }
        }
    }

    public enuTransferTypes getEnum() {
        Text2Enum();
        return enuTT;
    }
}
