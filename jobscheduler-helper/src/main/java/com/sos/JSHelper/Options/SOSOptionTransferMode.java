package com.sos.JSHelper.Options;

import com.sos.JSHelper.enums.enuTransferModes;

/** \class SOSOptionTransferMode
 *
 * \brief SOSOptionTransferMode -
 *
 * \details
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author KB
 * 
 * @version $Id$12.07.2010 \see reference
 *
 *          Created on 12.07.2010 14:31:02 */
/** @author KB */
public class SOSOptionTransferMode extends SOSOptionStringValueList {

    // public enum enuTransferModes {
    // ascii("ascii"), binary("binary"), text("text");
    //
    // public final String description;
    //
    // private enuTransferModes() {
    // this(null);
    // }
    //
    // private enuTransferModes(final String name) {
    // String k;
    // if (name == null) {
    // k = this.name();
    // }
    // else {
    // k = name;
    // }
    // description = k;
    // }
    //
    // public static String[] getArray() {
    // String[] strA = new String[3];
    // int i = 0;
    // for (enuTransferTypes enuType : enuTransferTypes.values()) {
    // strA[i++] = enuType.Text();
    // }
    // return strA;
    // }
    //
    // }
    /**
	 *
	 */
    private static final long serialVersionUID = -3336540655234080013L;
    private final String conClassName = "SOSOptionTransferMode";

    /** \brief SOSOptionTransferMode
     *
     * \details
     *
     * @param pPobjParent
     * @param pPstrKey
     * @param pPstrDescription
     * @param pPstrValue
     * @param pPstrDefaultValue
     * @param pPflgIsMandatory */
    public SOSOptionTransferMode(final JSOptionsClass pPobjParent, final String pPstrKey, final String pPstrDescription, final String pPstrValue,
            final String pPstrDefaultValue, final boolean pPflgIsMandatory) {
        super(pPobjParent, pPstrKey, pPstrDescription, pPstrValue, pPstrDefaultValue, pPflgIsMandatory);
        super.valueList(enuTransferModes.getArray());

    }

    /** \brief SOSOptionTransferMode
     *
     * \details
     *
     * @param pobjParent
     * @param pstrIndexedKey
     * @param pstrDescription
     * @param pstrDefaultValue
     * @param pflgIsMandatory */
    public SOSOptionTransferMode(final JSOptionsClass pobjParent, final String pstrIndexedKey, final String pstrDescription,
            final String pstrDefaultValue, final boolean pflgIsMandatory) {
        super(pobjParent, pstrIndexedKey, pstrDescription, pstrDefaultValue, pflgIsMandatory);
    }

    public boolean isAscii() {
        if (this.Value().equalsIgnoreCase(enuTransferModes.ascii.description) || this.Value().equalsIgnoreCase(enuTransferModes.text.description)) {
            return true;
        } else {
            return false;
        }
    }

    public boolean isBinary() {
        if (this.Value().equalsIgnoreCase(enuTransferModes.binary.description)) {
            return true;
        } else {
            return false;
        }
    }

    public boolean isText() {
        if (this.Value().equalsIgnoreCase(enuTransferModes.text.description)) {
            return true;
        } else {
            return false;
        }
    }

    public String getDescription() {
        @SuppressWarnings("unused")
        final String conMethodName = conClassName + "::getDescription";
        String strT = "";
        if (this.isAscii()) {
            strT = enuTransferModes.ascii.description;
        }
        if (this.isText()) {
            strT = enuTransferModes.text.description;
        }
        if (this.isBinary()) {
            strT = enuTransferModes.binary.description;
        }
        return strT;
    } // private String getDescription
}
