package com.sos.JSHelper.DataElements;

import static org.junit.Assert.assertEquals;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

/**

* \class JSDataElementDate 
* 
* \brief JSDataElementDate - 
* 
* \details
*
* \section JSDataElementDate.java_intro_sec Introduction
*
* \section JSDataElementDate.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author EQALS
* @version $Id$28.09.2009
* \see reference
*
* Created on 28.09.2009 14:38:21
 */

public class JSDataElementDateTest {

	@SuppressWarnings("unused")
	private final String	conClassName	= "JSDataElementDate";

	public JSDataElementDateTest() {
		//
	}

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}
@Test
public void testDateTime () throws Exception {
	
	JSDataElementDate objD = new JSDataElementDate ("20111220173250", "yyyyMMddHHmmss");
	System.out.println(objD.getDateTimeFormatted("yyyyMMddHHmmss"));
	System.out.println(objD.getDateObject().getTime());
}
	@Test
	public void testISO() throws Exception {
		String strT;
		JSDataElementDate objDate = new JSDataElementDate( // ....			
				" ", // .. Value ...
				"Date as of which the price is valid", // Titel
				8, // ... Size ...
				20, // ... Pos ...
				" ", // ... FormatString ...
				"ValidFromDate", // ... ColumnHeaderText ...
				"ValidFromDate" // ... XMLTagName ...
		);

		objDate.FormatString(JSDateFormat.dfDATE_SHORT);
		objDate.Value("20091101");
		strT = objDate.toXml();
		assertEquals("Date as XML is", "<ValidFromDate>2009-11-01</ValidFromDate>", strT);

	}
	
	@Test
	public void getLastFridayTest () {

		String strT;
		JSDataElementDate objDate = new JSDataElementDate( // ....			
				" ", // .. Value ...
				"Date as of which the price is valid", // Titel
				8, // ... Size ...
				20, // ... Pos ...
				" ", // ... FormatString ...
				"ValidFromDate", // ... ColumnHeaderText ...
				"ValidFromDate" // ... XMLTagName ...
		);

		for (int i = 1; i <= 12; i++) {
			int ilastfriday = objDate.getLastFridayInAMonth(i-1, 2011);
			System.out.println(String.format("Month %1$d: last Friday = %2$d", i, ilastfriday));
		}
	}
}
