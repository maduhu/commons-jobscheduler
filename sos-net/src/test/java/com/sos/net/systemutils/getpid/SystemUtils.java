package com.sos.net.systemutils.getpid;

/** \class SystemUtils
 * 
 * \brief SystemUtils -
 * 
 * \details
 *
 * \section SystemUtils.java_intro_sec Introduction
 *
 * \section SystemUtils.java_samples Some Samples
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author KB
 * 
 * @version $Id$20.07.2010 \see reference
 *
 *          Created on 20.07.2010 20:37:33 */

public class SystemUtils {

    /** got this code-snippet from
     * http://www.rgagnon.com/javadetails/java-0651.html
     * 
     * This solution use the RuntimeMXBean. The name of the bean contains the
     * pid (ex. 12345@localhost).
     * 
     * Warning : The returned name string can be any arbitrary string and a Java
     * virtual machine implementation can choose to embed platform-specific
     * useful information in the returned name string.
     * 
     * On the Sun JVM (Windows plateform), the PID is present.
     * 
     * Alternative:
     * http://www.java-forum.org/codeschnipsel-u-projekte/34052-prozesskiller
     * -win32-serivce-handler.html */
    @SuppressWarnings("unused")
    private final String conClassName = "SystemUtils";

    private SystemUtils() {
    }

    public static long getPID() {
        String processName = java.lang.management.ManagementFactory.getRuntimeMXBean().getName();
        return Long.parseLong(processName.split("@")[0]);
    }

    public static void main(String[] args) {
        String msg = "My PID is " + SystemUtils.getPID();

        javax.swing.JOptionPane.showConfirmDialog((java.awt.Component) null, msg, "SystemUtils", javax.swing.JOptionPane.DEFAULT_OPTION);

    }

}
