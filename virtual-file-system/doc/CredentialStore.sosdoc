<?xml version="1.0" encoding="UTF-8"?>

<?xml-stylesheet type="text/xsl" href="scheduler_job_documentation_v1.1.xsl"?>

<!-- $Id$ -->
<description xmlns="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1  http://www.sos-berlin.com/schema/scheduler_job_documentation_v1.1.xsd">
    <job name="SOSCredentialStore" title="SOSCredentialStore" order="yes">
        <script />
    </job>
    <releases>
        <release id="1.0" created="2014-01-20" modified="2014-01-25">
            <author name="mp" email="mp@sos-berlin.com" />
        </release>
    </releases>
    <configuration>
        <payload>
            <params>
                <param name="jade_settings.jadeconf" required="false" default_value="false" DataType="SOSOptionBoolean" Category="CredentialStore,Notes"
                    OptionName="CredentialStore_ProcessNotesParams" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">
                    <indexterm index="CredentialStoreProcessNotesParams" display="false"></indexterm>

                <note language="de">
                    <title>Notes als zusätzliche Parameter verarbeiten</title>
                    <p>
                    </p>
                    <p>

                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <title language="de">Beispiel: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
<p>[Keepass_DataBase_WithPassword]
use_credential_Store     = true
CredentialStore_FileName = R:\backup\sos\java\development\com.sos.VirtualFileSystem\keepassX-test.kdb
CredentialStore_KeyPath  = sos/server/homer.sos
CredentialStore_password = testing

[ReceiveUsingKeePass]
source_CredentialStore_KeyPath = sos/server/homer.sos
source_include                 = Keepass_DataBase_WithPassword
source_Dir                     = /tmp/test/jade/out

source_make_Dirs               = true
source_loadClassName           = com.sos.VirtualFileSystem.FTP.SOSVfsFtp2

target_protocol                = local
target_dir                     = /tmp/test/jade/in
operation                      = copy
file_spec                      = \.txt$
transfer_mode                  = ascii
source_transfer_mode           = ascii
loadClassName                  = com.sos.VirtualFileSystem.FTP.SOSVfsFtp2
</p>
                            </embeddedExample>
                            <explanation language="en">
                                In the "notes" propertry of KeePass can be used to store extra parameters i.e. options such as DB
                                connetction string , proxy server settings etc.
                            </explanation>
                            <explanation language="de">
                                todo: Hier folgt nun eine Erläuterung zu diesem Beispiel.
                            </explanation>
                        </codeexample>
                    </p>

                    <p>
                    </p>
                </note>
                <note language="en">
                    <title>Example profile in "jade_settings.jadeconf" with Credential Store </title>
                    <p>
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en"></title>
                            <embeddedExample type="parameter" os="all">
<p>[Keepass_DataBase_WithPassword]
use_credential_Store     = true
CredentialStore_FileName = R:\backup\sos\java\development\com.sos.VirtualFileSystem\keepassX-test.kdb
CredentialStore_KeyPath  = sos/server/homer.sos
CredentialStore_password = testing

[ReceiveUsingKeePass]
source_CredentialStore_KeyPath = sos/server/homer.sos
source_include                 = Keepass_DataBase_WithPassword
source_Dir                     = /tmp/test/jade/out

source_make_Dirs               = true
source_loadClassName           = com.sos.VirtualFileSystem.FTP.SOSVfsFtp2

target_protocol                = local
target_dir                     = /tmp/test/jade/in
operation                      = copy
file_spec                      = \.txt$
transfer_mode                  = ascii
source_transfer_mode           = ascii
loadClassName                  = com.sos.VirtualFileSystem.FTP.SOSVfsFtp2
</p>
                            </embeddedExample>
                            <explanation language="en">
                                In the "notes" propertry of KeePass can be used to store extra parameters i.e. options such as DB
                                connetction string , proxy server settings etc.
                            </explanation>
                        </codeexample>
                    </p>
                </note>

                </param>
            </params>
        </payload>
        <params>
            <param name="CredentialStore_ProcessNotesParams" required="false" default_value="false" DataType="SOSOptionBoolean" Category="CredentialStore,Notes"
                OptionName="CredentialStore_ProcessNotesParams" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStoreProcessNotesParams" display="false"></indexterm>

                <note language="de">
                    <title>Notes als zusätzliche Parameter verarbeiten</title>
                    <p> In den "notes" eines Eintrages können beliebige weitere Parameter bzw. Optionen, wie zum Beispiel ein Verbindungs-String zu einer
                        Datenbank, die Definition
                        eines Proxy-Servers,
                        spezifiziert werden.
                        Diese werden zusätzlich zu den anderen Parametern verarbeitet und
                        überscreiben bereits spezifizierte gleichnamige Parameter.
                    </p>
                    <p>
                        Mit diesem Parameter wird festgelegt, daß die im Notes-Abschnitt definierten Parameterdefinitionen zusätzlich berücksichtigt werden
                        sollen.
                        Die Optionen sind
                        wie Kommandozeilen-Optionen zu spezifizieren.
                        Diese Parameter werden, nachdem der Credential Store geöffnet
                        wurde, als letzte Parameter verarbeitet.
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <title language="de">Beispiel: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                -dburl=test -verbose=2 -password=12345
                            </embeddedExample>
                            <explanation language="en">
                                In the "notes" propertry of KeePass can be used to store extra parameters i.e. options such as DB
                                connetction string , proxy server settings etc.
                            </explanation>
                            <explanation language="de">
                                todo: Hier folgt nun eine Erläuterung zu diesem Beispiel.
                            </explanation>
                        </codeexample>
                    </p>

                    <p>
                    </p>
                </note>
                <note language="en">
                    <title>Process additional parameters from "notes" filed</title>
                    <p>
                        In "notes" filed of the CS Database extra parameters like DB connection string , Proxy server IP etc. can be defined. These paramters
                        will be processed with
                        the other parameters defined
                        in settings file, JITL parameters, but "IMP" if an paramter with same name is defined
                        in the "notes" section , parameter value in "notes" will have
                        priority.
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: of additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all"> -dburl=test -verbose=2 -password=12345
                            </embeddedExample>
                            <explanation language="en">
                                In the "notes" propertry of KeePass can be used to store extra parameters i.e. options such as DB
                                connetction string , proxy server settings etc.
                            </explanation>
                        </codeexample>
                    </p>
                </note>
            </param>
            <param name="CredentialStore_OverwriteExportedFile" required="false" default_value="true" DataType="SOSOptionBoolean" Category="CredentialStore,Attachment"
                OptionName="CredentialStore_OverwriteExportedFile" Alias="" usewith="" see="" since="1.6.4020">

                <indexterm index="CredentialStore_OverwriteExportedFile" display="false"></indexterm>

                <note language="de">
                    <title>CredentialStore_OverwriteExportedFile</title>
                    <p>

                    </p>
                </note>
                <note language="en">
                    <title>CredentialStore_OverwriteExportedFile</title>
                    <p>At runtime JADE can export the file defined in the attachment filed of the CS DB to the local file system. for example If attached file
                        is an SSH key and JADE want to use the Key file for Data
                        Exchange operation Usally if JADE want to use an SSH key , stored in the CS as
                        attachement JADE has to export attached file into predefined directory i.e.
                        $HOME/.ssh. To avoide any
                        unwanted overwriting of any existing
                        file into $HOME/.ssh folder, "IMP"" set this parameter as "false".
                    </p>
                </note>
            </param>
            <param name="CredentialStore_Permissions4ExportedFile" required="false" default_value="600" DataType="SOSOptionString" Category="CredentialStore,Attachment"
                OptionName="CredentialStore_Permissions4ExportedFile" Alias="" usewith="CredentialStore_ExportAttachment" see="CredentialStore_ExportAttachment"
                since="1.6.4020">

                <indexterm index="CredentialStore_Permissions4ExportedFile" display="false"></indexterm>

                <note language="de">
                    <title>CredentialStore_Permissions4ExportedFile</title>
                    <p>

                    </p>
                </note>
                <note language="en">
                    <title>CredentialStore_Permissions4ExportedFile</title>
                    <p>At runtime JADE can export the file defined in the attachment filed of the CS DB to the local file system. for example If attached file
                        is an SSH key and JADE want to use the Key file for Data
                        Exchange operation Usally if JADE want to use an SSH key , stored in the CS as
                        attachement JADE has to export attached file into predefined directory i.e.
                        $HOME/.ssh and key file should
                        have specific permissions. It
                        could be possible that "application user" calling the JADE have different set of application, to avoide any file permission
                        issue during
                        run time, "IMP" set the
                        required file permission using these parameters
                    </p>

                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section : CredentialStore_Permissions4ExportedFile</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStore_Permissions4ExportedFile="600"</p>
                            </embeddedExample>
                            <explanation language="en">
                            </explanation>
                        </codeexample>
                    </p>

                </note>
            </param>
            <param name="CredentialStore_DeleteExportedFileOnExit" required="false" default_value="true" DataType="SOSOptionBoolean" Category="CredentialStore,Attachment"
                OptionName="CredentialStoreDeleteExportedFileOnExit" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStore_DeleteExportedFileOnExit" display="false"></indexterm>

                <note language="de">
                    <title>Löschen des Dateianhangs nach dem Ende der Applikation</title>
                    <p>

                    </p>
                </note>
                <note language="en">
                    <title>Delete Attachment On Exit of Application</title>
                    <p> At runtime JADE will export the attached file to local file system , once operation is completed , irrespecive of operation's status
                        (successfully or unsucessfully ), by default JADE will delete this file.
                        In special case i.e. for debuging or any other reason if you
                        want
                        that JADE should not delete the file "IMP" set this parameter as FALSE
                    </p>
                </note>
            </param>
            <param name="CredentialStore_ExportAttachment" required="false" default_value="false" DataType="SOSOptionBoolean" Category="CredentialStore,Attachment"
                OptionName="CredentialStore_ExportAttachment" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStore_ExportAttachment" display="false"></indexterm>

                <note language="de">
                    <title>Dateianhang as CS entladen</title>
                    <p>

                    </p>
                </note>
                <note language="en">
                    <title>Export attached file to disc</title>
                    <p>If JADE need an file, stored in the CS DB as attachemenr, at runtime JADE can export the file on local filesystem. By default JADE don't
                        export attached file.
                        "IMP" if JADE need "attachment" file at runtime , set this parameter as TRUE
                    </p>
                </note>
            </param>
            <param name="CredentialStore_ExportAttachment2FileName" required="false" default_value="" DataType="SOSOptionOutFileName" Category="CredentialStore,Attachment"
                OptionName="CredentialStoreExportAttachment2FileName" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStore_ExportAttachment2FileName" display="false"></indexterm>

                <note language="de">
                    <title>Name der Datei für den extrahierten Dateianhang</title>
                    <p>

                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <title language="de">Beispiel: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">


                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                            <explanation language="de">
                                todo: Hier folgt nun eine Erläuterung zu diesem Beispiel.
                            </explanation>
                        </codeexample>
                    </p>

                </note>
                <note language="en">
                    <title>Name of the extracted attachment file</title>
                    <p>
                        To use the file stored in the CS as attachment, during an operation, JADE has to export the attached file on local filesystem. To define
                        the name of
                        exported file name
                        on local filesystem , use this parameter.
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStore_ExportAttachment2FileName="archive_server_ras.ppk"</p>
                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                        </codeexample>
                    </p>
                </note>
            </param>
            <param name="CredentialStore_KeyFileName" required="false" default_value="" DataType="SOSOptionInFileName" Category="CredentialStore,General"
                OptionName="CredentialStoreKeyFileName" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStore_KeyFileName" display="false"></indexterm>

                <note language="de">
                    <title>Name der Datei mit dem privaten Schlüssel</title>
                    <p>
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <title language="de">Beispiel: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                            <explanation language="de">
                                todo: Hier folgt nun eine Erläuterung zu diesem Beispiel.
                            </explanation>
                        </codeexample>
                    </p>
                </note>
                <note language="en">
                    <title>Name of the File containing the private Key</title>
                    <p> Credential store can be accessed by the JADE using an private key or with password or combination of both.
                        define the path/location of
                        the ssh key file using this parameter.
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStore_KeyFileName="jade_cs_rsa.ppk"</p>
                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                        </codeexample>
                    </p>
                </note>
            </param>
            <param name="CredentialStore_password" required="false" default_value="" DataType="SOSOptionPassword" Category="CredentialStore,Access"
                OptionName="CredentialStore_password" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStorePassword" display="false"></indexterm>

                <note language="de">
                    <title>Kennwort für den CS</title>
                    <p>
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="de">example: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStore_password="55ybr293N!2BButnY4,w"</p>
                            </embeddedExample>
                            <explanation language="de">
                                todo: This is the explanation for this example.
                            </explanation>
                        </codeexample>
                    </p>

                </note>
                <note language="en">
                    <title>Password for CS</title>
                    <p>
                        Credential store can be accessed by the JADE using an private key or with password or combination of both.
                        define the CS's access password
                        using this parameter. "IMP" always set strong password for CS.
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStore_password="55ybr293N!2BButnY4,w"</p>
                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                        </codeexample>
                    </p>
                </note>
            </param>
            <param name="CredentialStore_AuthenticationMethod" required="true" default_value="privatekey" DataType="SOSOptionString" Category="CredentialStore,Access"
                OptionName="CredentialStoreAuthenticationMethod" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStore_AuthenticationMethod" display="false"></indexterm>

                <note language="de">
                    <title>Authentifizierung-Methode für den CS</title>
                    <p>
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <title language="de">Beispiel: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">


                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                            <explanation language="de">
                                todo: Hier folgt nun eine Erläuterung zu diesem Beispiel.
                            </explanation>
                        </codeexample>
                    </p>
                </note>
                <note language="en">
                    <title>Authentication Method for the CS</title>
                    <p>
                        There are three possible combination of Authentication methods.
                    </p>
                    <p>
                        <ul>1. Password</ul>
                        <ul>2. SSH Private Key</ul>
                        <ul>3. Password + SSH Private Key</ul>
                    </p>

                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStoreAuthenticationMethod="password"</p>
                                <p> --- OR --- </p>
                                <p>-CredentialStoreAuthenticationMethod="privatekey"</p>
                                <p> --- OR --- </p>
                                <p>-CredentialStoreAuthenticationMethod="password+privatekey"</p>

                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                        </codeexample>
                    </p>

                </note>
            </param>
            <param name="CredentialStore_StoreType" required="false" default_value="KeePass" DataType="SOSOptionString" Category="CredentialStore,General"
                OptionName="CredentialStoreStoreType" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStore_StoreType" display="false"></indexterm>

                <note language="de">
                    <title>Type des CS</title>
                    <p>
                        Der Typ des Password Tresors wird hiermit angegeben. Zur Zeit ist als Wert nur "keepass" möglich.
                    </p>
                </note>
                <note language="en">
                    <title>The Type of the crendential store application</title>
                    <p>
                        At present only "KeePass" as CS DB is supported and only "KeePass" as valid parameter value is permitted.
                    </p>
                </note>
            </param>
            <param name="CredentialStore_KeyPath" required="true" default_value="" DataType="SOSOptionString" Category="CredentialStore,Access"
                OptionName="CredentialStore_KeyPath" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStoreKeyPath" display="false"></indexterm>

                <note language="de">
                    <title>Pfad und Schlüssel für den Zugriff auf die Credentials</title>
                    <p>

                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <title language="de">Beispiel: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">


                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                            <explanation language="de">
                                todo: Hier folgt nun eine Erläuterung zu diesem Beispiel.
                            </explanation>
                        </codeexample>
                    </p>

                </note>
                <note language="en">
                    <title>Path and Key for the credentials</title>
                    <p>
                        This Option specifies the path of the Access key for the entry which has to be used for the credentials.
                    </p>
                    <p> Credential store can be accessed by the JADE using an private key or with password or combination of both.
                        define the path/location of
                        the ssh key file using this parameter.
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStore_KeyFileName="/ssh/server1/sap-upload"</p>
                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                        </codeexample>
                    </p>
                </note>
            </param>
            <param name="CredentialStore_FileName" required="true" default_value="" DataType="SOSOptionInFileName" Category="CredentialStore,General"
                OptionName="CredentialStoreFileName" Alias="" usewith="" see="" since="1.6.4020" scope="source,target,general">

                <indexterm index="CredentialStoreFileName" display="false"></indexterm>

                <note language="de">
                    <title>Der Name der Datenbank mit den Credentials</title>
                    <p>
                        Für Datenbanken, die mit KeePass oder KeePassX verwaltet werden, hat die Datei die Namens-Erweiterung ".kdb".
                    </p>
                </note>
                <note language="en">
                    <title>Name of Credential Database</title>
                    <p>
                        The path and name of the KeePass or KeePassX DB file with the file extension ".kdb".
                    </p>
                    <p>
                        <codeexample type="parameter">
                            <title language="en">example: additional parameters in notes section</title>
                            <embeddedExample type="parameter" os="all">
                                <p>-CredentialStoreFileName="/etc/keystore/sap_jade.kdb"</p>
                            </embeddedExample>
                            <explanation language="en">
                                todo: This is the explanation for this example.
                            </explanation>
                        </codeexample>
                    </p>

                </note>
                <note language="fr">
                    <title>CredentialStoreFileName</title>
                    <p>
                    </p>
                </note>
            </param>

            <param name="use_credential_Store" required="false" default_value="false" DataType="SOSOptionBoolean" Category="CredentialStore,General"
                OptionName="use_credentialStore" Alias="" usewith="" see="CredentialStoreFileName,CredentialStore_KeyPath" since="1.6.4020" scope="source,target,general">

                <indexterm index="use_credential_Store" display="false"></indexterm>

                <note language="de">
                    <title>Credential Store benutzen</title>
                    <p>

                    </p>
                </note>
                <note language="en">
                    <title>use credential store for authentication</title>
                    <p>
                        If you want to store your access data i.e. user-id , password, SSH key , DB URL in encrypted CS DB, unable this parameter and configure
                        the rest if the
                        CS accordinglly. By default JADE will look for the parameters from settings.ini, command line or from JITL job.
                    </p>
                </note>
            </param>
        </params>
    </configuration>
    <documentation language="en">
        <p>
            The "Password Safe" (CS Credential Store ) offerers possibilities to store encrypted connection data and any other data securely and  independententlly  of
            application (i.e. JADE). The access to the CS is only possible with Access method such as SSH key or password.
        </p>
        <p>
            Currently CS is using "KeePass" and "KeePassX" with the db verson 1.0, thus CS can be used on most popular OS platforms.
        </p>
        <p>
            The advantage of using CS is , that CS store access credentials  ( and also other informaition/parameters) in standarized , secure and encrypted database i.e.
            Keepass.
            JADE access the CS Database using standard interface. CS Database can only be access using Password, encryption-key file(ppk) or
            combination
            of both.
            CS Password is also used to encrypt contents stored in CS Database with AES.
        </p>
        <p>
            CS can also be used for securely store information/parameters along side password, Database connection URL, runtime decryption key and other access
            data.
        </p>

        <p>
            Following information can be retreived from CS's standard fields
        </p>
        <p>
            <features>
                <feature>
                    <title>userID</title>
                    <abstract>
                        <p>The User identifaction of the user who is authorized for the operation.</p>
                    </abstract>
                    <documentation></documentation>
                </feature>
                <feature>
                    <title>Password</title>
                    <abstract>
                        <p>Assigned password for the user.</p>
                    </abstract>
                    <documentation></documentation>
                </feature>
                <feature>
                    <title>Server-Name</title>
                    <p>Target Server-Name or IP-address</p>
                </feature>
                <feature>
                    <title>Notes</title>
                    <abstract>
                        <p>In "notes" section of the CS other parameters/options can be stored i.e. extra JADE parameters , Database connection URL etc. The
                            extra options are defined similarly as they are defined on the command line.
                        </p>
                    </abstract>
                </feature>
                <feature>
                    <title>File-Attachment</title>
                    <abstract>
                        <p>Any file such as PGP file, SSH private key file can be stored in the CS as file attachment. Application will retrieve the attached
                            file on runtime and will delete the file "immediately" once operation is finished.
                        </p>
                    </abstract>
                </feature>
            </features>
        </p>
    </documentation>
    <documentation language="de">
        <p>
            Mit dem "Password Tresor" (CS, Credential Store) gibt es die Möglichkeit, Zugangsdaten (und andere Daten) verschlüsselt und unabhängig von einer
            Anwendung zu speichern.
            Der Zugriff auf den CS erfolgt über einen Schlüssel, der spezifisch für den CS ist.
        </p>
        <p>
            Aktuell wird "KeePass" und "KeePassX" in der DB-Version 1.0 unterstützt. Damit kann der CS auf den am meisten verbreiteten Plattformen genutzt
            werden.
        </p>
        <p>
            Der Vorteil bei einer Nutzung des CS ist es, die Zugangsdaten (und evtl. weitere Infos) in einer standardisierten und gesicherten, d.h.
            verschlüsselten, Datenbank zu speichern. Der Zugriff erfolgt
            über ein
            Interface. Die Datenbank wird über ein Password, eine Schlüsseldatei (ppk) oder
            eine Kombination aus beiden geschützt.
            Das Password wird auch
            dazu benutzt, um den Inhalt der Datenbank mit dem Verfahren AES zu verschlüsseln.
        </p>
        <p>Im CS können nicht nur die Nutzerkennung und das Kennwort gespeichert und genutzt werden, sondern auch weitere Daten, die insbesondere schützenswert
            sind.
        </p>
        <p>
            Die folgenden Informationen können verwendet werden:
        </p>
        <p>userID</p>
        <p></p>
        <p>password</p>
        <p></p>
        <p>Server-Name</p>
        <p></p>
        <p>notes</p>
        <p>In den "notes" können beliebige weitere Optionen, wie zum Beispiel ein Verbindungs-String zu einer Datenbank, gespeichert werden.
            Die Optionen sind
            wie Kommandozeilen-Optionen zu spezifizieren und
        </p>
        <p>File-Anhang</p>
        <p>Als Datei-Anhang kann zum Beispiel eine PGP-Datei oder ein privater Schlüssel für den Zugriff auf einen SSH2-Server gespeichert werden.
            Diese Datei
            kann zur Laufzeit der Anwendung dann extrahiert werden. Die Anwendung kann diese Datei benutzen.
            Nach Beendigung der Anwendung wird die Datei dann
            sofort wieder gelöscht.
        </p>
    </documentation>
</description>


