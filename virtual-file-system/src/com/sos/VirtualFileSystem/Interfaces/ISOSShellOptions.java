package com.sos.VirtualFileSystem.Interfaces;

import com.sos.JSHelper.Options.SOSOptionBoolean;
import com.sos.JSHelper.Options.SOSOptionCommandString;
import com.sos.JSHelper.Options.SOSOptionInFileName;
import com.sos.JSHelper.Options.SOSOptionInteger;
import com.sos.JSHelper.Options.SOSOptionIntegerArray;
import com.sos.JSHelper.Options.SOSOptionRegExp;
import com.sos.JSHelper.Options.SOSOptionString;

/**
* \class ISOSShellOptions 
* 
* \brief ISOSShellOptions - 
* 
* \details
*
* \section ISOSShellOptions.java_intro_sec Introduction
*
* \section ISOSShellOptions.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author KB
* @version $Id$21.05.2010
* \see reference
*
* Created on 21.05.2010 13:59:43
 */

public interface ISOSShellOptions {

	/**
	 * \brief getcommand
	 *
	 * \details
	 * getter 
	 *
	 * @return the command
	 */
	public abstract SOSOptionCommandString getCommand();

	/**
	 * \brief setcommand - 
	 *
	 * \details
	 * setter 
	 *
	 * @param command the value for command to set
	 */
	public abstract void setCommand(SOSOptionCommandString command);

	/**
	 * \brief getcommand_delimiter
	 *
	 * \details
	 * getter 
	 *
	 * @return the command_delimiter
	 */
	public abstract SOSOptionRegExp getCommand_delimiter();

	/**
	 * \brief setcommand_delimiter - 
	 *
	 * \details
	 * setter 
	 *
	 * @param commandDelimiter the value for command_delimiter to set
	 */
	public abstract void setCommand_delimiter(SOSOptionRegExp commandDelimiter);

	/**
	 * \brief getcommand_script
	 *
	 * \details
	 * getter 
	 *
	 * @return the command_script
	 */
	public abstract SOSOptionCommandString getCommand_script();

	/**
	 * \brief setcommand_script - 
	 *
	 * \details
	 * setter 
	 *
	 * @param commandScript the value for command_script to set
	 */
	public abstract void setCommand_script(SOSOptionCommandString commandScript);

	/**
	 * \brief getcommand_script_file
	 *
	 * \details
	 * getter 
	 *
	 * @return the command_script_file
	 */
	public abstract SOSOptionInFileName getCommand_script_file();

	/**
	 * \brief setcommand_script_file - 
	 *
	 * \details
	 * setter 
	 *
	 * @param commandScriptFile the value for command_script_file to set
	 */
	public abstract void setCommand_script_file(SOSOptionInFileName commandScriptFile);

	/**
	 * \brief getcommand_script_param
	 *
	 * \details
	 * getter 
	 *
	 * @return the command_script_param
	 */
	public abstract SOSOptionString getCommand_script_param();

	/**
	 * \brief setcommand_script_param - 
	 *
	 * \details
	 * setter 
	 *
	 * @param commandScriptParam the value for command_script_param to set
	 */
	public abstract void setCommand_script_param(SOSOptionString commandScriptParam);

	/**
	 * \brief getignore_error
	 *
	 * \details
	 * getter 
	 *
	 * @return the ignore_error
	 */
	public abstract SOSOptionBoolean getIgnore_error();

	/**
	 * \brief setignore_error - 
	 *
	 * \details
	 * setter 
	 *
	 * @param ignoreError the value for ignore_error to set
	 */
	public abstract void setIgnore_error(SOSOptionBoolean ignoreError);

	/**
	 * \brief getignore_exit_code
	 *
	 * \details
	 * getter 
	 *
	 * @return the ignore_exit_code
	 */
	public abstract SOSOptionIntegerArray getIgnore_exit_code();

	/**
	 * \brief setignore_exit_code - 
	 *
	 * \details
	 * setter 
	 *
	 * @param ignoreExitCode the value for ignore_exit_code to set
	 */
	public abstract void setIgnore_exit_code(SOSOptionIntegerArray ignoreExitCode);

	/**
	 * \brief getignore_signal
	 *
	 * \details
	 * getter 
	 *
	 * @return the ignore_signal
	 */
	public abstract SOSOptionBoolean getIgnore_signal();

	/**
	 * \brief setignore_signal - 
	 *
	 * \details
	 * setter 
	 *
	 * @param ignoreSignal the value for ignore_signal to set
	 */
	public abstract void setIgnore_signal(SOSOptionBoolean ignoreSignal);

	/**
	 * \brief getignore_stderr
	 *
	 * \details
	 * getter 
	 *
	 * @return the ignore_stderr
	 */
	public abstract SOSOptionBoolean getIgnore_stderr();

	/**
	 * \brief setignore_stderr - 
	 *
	 * \details
	 * setter 
	 *
	 * @param ignoreStderr the value for ignore_stderr to set
	 */
	public abstract void setIgnore_stderr(SOSOptionBoolean ignoreStderr);

	/**
	 * \brief getsimulate_shell
	 *
	 * \details
	 * getter 
	 *
	 * @return the simulate_shell
	 */
	public abstract SOSOptionBoolean getSimulate_shell();

	/**
	 * \brief setsimulate_shell - 
	 *
	 * \details
	 * setter 
	 *
	 * @param simulateShell the value for simulate_shell to set
	 */
	public abstract void setSimulate_shell(SOSOptionBoolean simulateShell);

	/**
	 * \brief getsimulate_shell_inactivity_timeout
	 *
	 * \details
	 * getter 
	 *
	 * @return the simulate_shell_inactivity_timeout
	 */
	public abstract SOSOptionInteger getSimulate_shell_inactivity_timeout();

	/**
	 * \brief setsimulate_shell_inactivity_timeout - 
	 *
	 * \details
	 * setter 
	 *
	 * @param simulateShellInactivityTimeout the value for simulate_shell_inactivity_timeout to set
	 */
	public abstract void setSimulate_shell_inactivity_timeout(SOSOptionInteger simulateShellInactivityTimeout);

	/**
	 * \brief getsimulate_shell_login_timeout
	 *
	 * \details
	 * getter 
	 *
	 * @return the simulate_shell_login_timeout
	 */
	public abstract SOSOptionInteger getSimulate_shell_login_timeout();

	/**
	 * \brief setsimulate_shell_login_timeout - 
	 *
	 * \details
	 * setter 
	 *
	 * @param simulateShellLoginTimeout the value for simulate_shell_login_timeout to set
	 */
	public abstract void setSimulate_shell_login_timeout(SOSOptionInteger simulateShellLoginTimeout);

	/**
	 * \brief getsimulate_shell_prompt_trigger
	 *
	 * \details
	 * getter 
	 *
	 * @return the simulate_shell_prompt_trigger
	 */
	public abstract SOSOptionString getSimulate_shell_prompt_trigger();

	/**
	 * \brief setsimulate_shell_prompt_trigger - 
	 *
	 * \details
	 * setter 
	 *
	 * @param simulateShellPromptTrigger the value for simulate_shell_prompt_trigger to set
	 */
	public abstract void setSimulate_shell_prompt_trigger(SOSOptionString simulateShellPromptTrigger);

	/**
	 * \brief getignore_hangup_signal
	 *
	 * \details
	 * getter 
	 *
	 * @return the ignore_hangup_signal
	 */
	public abstract SOSOptionBoolean getIgnore_hangup_signal();

	/**
	 * \brief setignore_hangup_signal - 
	 *
	 * \details
	 * setter 
	 *
	 * @param ignoreHangupSignal the value for ignore_hangup_signal to set
	 */
	public abstract void setIgnore_hangup_signal(SOSOptionBoolean ignoreHangupSignal);

}