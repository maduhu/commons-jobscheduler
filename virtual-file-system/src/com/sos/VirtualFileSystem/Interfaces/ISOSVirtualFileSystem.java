package com.sos.VirtualFileSystem.Interfaces;

import java.io.IOException;

import com.sos.VirtualFileSystem.DataElements.SOSFileList;
import com.sos.VirtualFileSystem.DataElements.SOSFolderName;

/**
* \class ISOSVirtualFileSystem 
* 
* \brief ISOSVirtualFileSystem - 
* 
* \details
*
* \section ISOSVirtualFileSystem.java_intro_sec Introduction
*
* \section ISOSVirtualFileSystem.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author KB
* @version $Id$21.05.2010
* \see reference
*
* Created on 21.05.2010 10:55:28
 */

/**
 * @author KB
 *
 */
public interface ISOSVirtualFileSystem {

	public ISOSConnection getConnection() ;
	public ISOSSession getSession();

	/**
	 * 
	 * \brief mkdir - create a directory
	 * 
	 * \details
	 * Creates a (sub)directory on the FTP server in the current directory .
	 * 
	 * \return ISOSVirtualFolder
	 *
	 * @param pobjFolderName
	 * @throws IOException
	 */
	
	public ISOSVirtualFolder mkdir (final SOSFolderName pobjFolderName) throws IOException;
	
	/**
	 * 
	 * \brief rmdir - remove directory
	 * 
	 * \details
	 * Removes a directory on the FTP server (if empty).
	 * 
	 * \return boolean
	 *
	 * @param pobjFolderName
	 * @throws IOException
	 */
	
	public boolean rmdir(final SOSFolderName pobjFolderName) throws IOException;
	public SOSFileList dir(SOSFolderName pobjFolderName);
	public  SOSFileList dir(String pathname, int flag);
	
	
}
