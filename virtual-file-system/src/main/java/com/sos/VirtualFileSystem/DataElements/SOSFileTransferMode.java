package com.sos.VirtualFileSystem.DataElements;

import com.sos.JSHelper.DataElements.JSDataElement;
import com.sos.i18n.annotation.I18NResourceBundle;

/**
* \class SOSFileTransferMode 
* 
* \brief SOSFileTransferMode - 
* 
* \details
*
* \section SOSFileTransferMode.java_intro_sec Introduction
*
* \section SOSFileTransferMode.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author KB
* @version $Id$25.05.2010
* \see reference
*
* Created on 25.05.2010 12:46:20
 */

/**
 * @author KB
 *
 */
@I18NResourceBundle(baseName = "SOSVirtualFileSystem", defaultLocale = "en")

public class SOSFileTransferMode extends JSDataElement {

	@SuppressWarnings("unused")
	private final String	conClassName	= "SOSFileTransferMode";

	SOSFileTransferMode() {
		//
	}

	/**
	 * \brief SOSFileTransferMode
	 *
	 * \details
	 *
	 * @param pstrValue
	 */
	public SOSFileTransferMode(String pstrValue) {
		super(pstrValue);
	}

	/**
	 * \brief SOSFileTransferMode
	 *
	 * \details
	 *
	 * @param pstrValue
	 * @param pstrDescription
	 */
	public SOSFileTransferMode(String pstrValue, String pstrDescription) {
		super(pstrValue, pstrDescription);
	}

	/**
	 * \brief SOSFileTransferMode
	 *
	 * \details
	 *
	 * @param pstrValue
	 * @param pstrDescription
	 * @param pintSize
	 * @param pintPos
	 * @param pstrFormatString
	 * @param pstrColumnHeader
	 * @param pstrXMLTagName
	 */
	public SOSFileTransferMode(String pstrValue, String pstrDescription, int pintSize, int pintPos, String pstrFormatString, String pstrColumnHeader,
			String pstrXMLTagName) {
		super(pstrValue, pstrDescription, pintSize, pintPos, pstrFormatString, pstrColumnHeader, pstrXMLTagName);
	}
	
	public boolean isAscii () {
		
		if (this.Value().equalsIgnoreCase("ascii") || this.Value().equalsIgnoreCase("text") ) {
			return true;
		}
		else {
			return false;
		}
			
	}
	public boolean isBinary () {
		
		if (this.Value().equalsIgnoreCase("binary") ) {
			return true;
		}
		else {
			return false;
		}
			
	}
}
